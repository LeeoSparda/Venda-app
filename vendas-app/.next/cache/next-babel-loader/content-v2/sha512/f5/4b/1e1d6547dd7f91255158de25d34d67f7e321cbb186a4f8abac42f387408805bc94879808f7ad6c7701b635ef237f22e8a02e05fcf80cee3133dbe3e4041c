{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\TAC_projeto\\\\vendas-app\\\\src\\\\components\\\\common\\\\input\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { formatReal } from 'app/util/money';\nimport { FormatUtils } from '@4us-dev/utils';\nconst formatUtils = new FormatUtils();\nexport const Input = (_ref) => {\n  let {\n    label,\n    columnClasses,\n    id,\n    error,\n    formatter,\n    onChange\n  } = _ref,\n      inputProps = _objectWithoutProperties(_ref, [\"label\", \"columnClasses\", \"id\", \"error\", \"formatter\", \"onChange\"]);\n\n  const onInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const formattedValue = formatter && formatter(value) || value;\n    onChange(_objectSpread(_objectSpread({}, event), {}, {\n      target: {\n        name,\n        value: formattedValue\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `field column ${columnClasses}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      htmlFor: id,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        className: \"input\",\n        onChange: onInputChange,\n        id: id\n      }, inputProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help is-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\nexport const InputMoney = props => {\n  return /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, props), {}, {\n    formatter: formatReal\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\nexport const InputCPF = props => {\n  return /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, props), {}, {\n    formatter: formatUtils.formatCPF\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\nexport const InputTelefone = props => {\n  return /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, props), {}, {\n    formatter: formatUtils.formatPhone\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\nexport const InputDate = props => {\n  const formatData = value => {\n    if (!value) {\n      return '';\n    }\n\n    const data = formatUtils.formatOnlyIntegers(value);\n    const size = value.length;\n\n    if (size <= 2) {\n      return data;\n    }\n\n    if (size <= 4) {\n      return data.substr(0, 2) + \"/\" + data.substr(2, 2);\n    }\n\n    if (size <= 6) {\n      return data.substr(0, 2) + \"/\" + data.substr(2, 2) + \"/\" + data.substr(4, 2);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, props), {}, {\n    maxLength: 10,\n    formatter: formatData\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/TAC_projeto/vendas-app/src/components/common/input/index.tsx"],"names":["formatReal","FormatUtils","formatUtils","Input","label","columnClasses","id","error","formatter","onChange","inputProps","onInputChange","event","value","target","name","formattedValue","InputMoney","props","InputCPF","formatCPF","InputTelefone","formatPhone","InputDate","formatData","data","formatOnlyIntegers","size","length","substr"],"mappings":"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","sourcesContent":["import { InputHTMLAttributes } from 'react'\nimport { formatReal } from 'app/util/money'\nimport { FormatUtils } from '@4us-dev/utils'\n\nconst formatUtils = new FormatUtils();\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    id: string;\n    label: string;\n    columnClasses?: string;\n    error?: string;\n    formatter?: (value: string) => string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n    label,\n    columnClasses,\n    id,\n    error,\n    formatter,\n    onChange,\n    ...inputProps\n}: InputProps) => {\n\n    const onInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        const formattedValue = (formatter && formatter(value as string)) || value\n\n        onChange({\n            ...event,\n            target: {\n                name,\n                value: formattedValue                \n            }\n        })\n    }\n\n    return (\n        <div className={`field column ${columnClasses}` }>\n            <label className=\"label\" htmlFor={id}>{label}</label>\n            <div className=\"control\">\n                <input className=\"input\" \n                    onChange={onInputChange}\n                    id={id} {...inputProps} />\n                {error &&\n                    <p className=\"help is-danger\">{ error }</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const InputMoney: React.FC<InputProps> = (props: InputProps) => {\n    return (\n        <Input {...props} formatter={formatReal} />\n    )\n}\n\nexport const InputCPF: React.FC<InputProps> = (props: InputProps) => {\n    return (\n        <Input {...props} formatter={formatUtils.formatCPF} />\n    )\n}\n\nexport const InputTelefone: React.FC<InputProps> = (props: InputProps) => {\n    return (\n        <Input {...props} formatter={formatUtils.formatPhone} />\n    )\n}\n\nexport const InputDate: React.FC<InputProps> = (props: InputProps) => {\n\n    const formatData = (value: string) => {\n        if(!value){\n            return '';\n        }\n\n        const data = formatUtils.formatOnlyIntegers(value);\n        const size = value.length;\n\n        if(size <= 2){\n            return data;\n        }\n\n        if(size <= 4){\n            return data.substr(0, 2) + \"/\" + data.substr(2, 2);\n        }\n\n        if(size <= 6){\n            return data.substr(0,2) + \"/\" + data.substr(2,2) + \"/\" + data.substr(4,2)\n        }\n    }\n\n    return (\n        <Input {...props} maxLength={10} formatter={formatData} />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}