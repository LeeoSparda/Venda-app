{"ast":null,"code":"import { httpClient } from 'app/http';\nconst resourceURL = \"/api/produtos\";\nexport const useProdutoService = () => {\n  const salvar = async produto => {\n    const response = await httpClient.post(resourceURL, produto);\n    return response.data;\n  };\n\n  const atualizar = async produto => {\n    const url = `${resourceURL}/${produto.id}`;\n    await httpClient.put(url, produto);\n  };\n\n  const carregarProduto = async id => {\n    const url = `${resourceURL}/${id}`;\n    const response = await httpClient.get(url);\n    return response.data;\n  };\n\n  const deletar = async id => {\n    const url = `${resourceURL}/${id}`;\n    await httpClient.delete(url);\n  };\n\n  const listar = async () => {\n    const response = await httpClient.get(resourceURL);\n    return response.data;\n  };\n\n  return {\n    salvar,\n    atualizar,\n    carregarProduto,\n    deletar,\n    listar\n  };\n};","map":{"version":3,"sources":["D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/src/app/services/produto.service.ts"],"names":["httpClient","resourceURL","useProdutoService","salvar","produto","response","post","data","atualizar","url","id","put","carregarProduto","get","deletar","delete","listar"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AAIA,MAAMC,WAAmB,GAAG,eAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAEnC,QAAMC,MAAM,GAAG,MAAOC,OAAP,IAA+C;AAC3D,UAAMC,QAAgC,GAAG,MAAML,UAAU,CAACM,IAAX,CAAyBL,WAAzB,EAAsCG,OAAtC,CAA/C;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACF,GAHD;;AAKA,QAAMC,SAAS,GAAG,MAAOJ,OAAP,IAA4C;AAC1D,UAAMK,GAAW,GAAI,GAAER,WAAY,IAAGG,OAAO,CAACM,EAAG,EAAjD;AACA,UAAMV,UAAU,CAACW,GAAX,CAAwBF,GAAxB,EAA6BL,OAA7B,CAAN;AACH,GAHD;;AAKA,QAAMQ,eAAe,GAAG,MAAOF,EAAP,IAAiC;AACrD,UAAMD,GAAW,GAAI,GAAER,WAAY,IAAGS,EAAG,EAAzC;AACA,UAAML,QAAgC,GAAG,MAAML,UAAU,CAACa,GAAX,CAAeJ,GAAf,CAA/C;AACA,WAAOJ,QAAQ,CAACE,IAAhB;AACH,GAJD;;AAMA,QAAMO,OAAO,GAAG,MAAOJ,EAAP,IAA8B;AAC1C,UAAMD,GAAW,GAAI,GAAER,WAAY,IAAGS,EAAG,EAAzC;AACA,UAAMV,UAAU,CAACe,MAAX,CAAkBN,GAAlB,CAAN;AACH,GAHD;;AAKA,QAAMO,MAAM,GAAG,YAAiC;AAC5C,UAAMX,QAAkC,GAAG,MAAML,UAAU,CAACa,GAAX,CAAeZ,WAAf,CAAjD;AACA,WAAOI,QAAQ,CAACE,IAAhB;AACH,GAHD;;AAKA,SAAO;AACHJ,IAAAA,MADG;AAEHK,IAAAA,SAFG;AAGHI,IAAAA,eAHG;AAIHE,IAAAA,OAJG;AAKHE,IAAAA;AALG,GAAP;AAOH,CAnCM","sourcesContent":["import { httpClient } from 'app/http'\nimport { Produto } from 'app/models/produtos'\nimport { AxiosResponse } from 'axios'\n\nconst resourceURL: string = \"/api/produtos\"\n\nexport const useProdutoService = () => {\n\n    const salvar = async (produto: Produto) : Promise<Produto> => {\n       const response: AxiosResponse<Produto> = await httpClient.post<Produto>(resourceURL, produto )\n       return response.data;\n    }\n\n    const atualizar = async (produto: Produto) : Promise<void> => {\n        const url: string = `${resourceURL}/${produto.id}` \n        await httpClient.put<Produto>(url, produto)\n    }\n\n    const carregarProduto = async (id) : Promise<Produto> => {\n        const url: string = `${resourceURL}/${id}`\n        const response: AxiosResponse<Produto> = await httpClient.get(url);\n        return response.data;\n    }\n\n    const deletar = async (id) : Promise<void> => {\n        const url: string = `${resourceURL}/${id}`\n        await httpClient.delete(url)\n    }\n\n    const listar = async () : Promise<Produto[]> => {\n        const response: AxiosResponse<Produto[]> = await httpClient.get(resourceURL)\n        return response.data\n    }\n\n    return {\n        salvar,\n        atualizar,\n        carregarProduto,\n        deletar,\n        listar\n    }\n}"]},"metadata":{},"sourceType":"module"}