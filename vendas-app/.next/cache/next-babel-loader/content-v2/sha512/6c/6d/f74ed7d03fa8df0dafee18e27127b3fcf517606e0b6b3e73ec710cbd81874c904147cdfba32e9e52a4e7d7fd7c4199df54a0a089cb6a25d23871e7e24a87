{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/TAC-projetoFinal/vendas-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/TAC-projetoFinal/vendas-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\TAC-projetoFinal\\\\vendas-app\\\\src\\\\components\\\\vendas\\\\form.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { useState } from 'react';\nimport { useClienteService, useProdutoService } from 'app/services';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Dialog } from 'primereact/dialog';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Dropdown } from 'primereact/dropdown';\nimport { validationScheme } from './validationScheme';\nvar formatadorMoney = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL'\n});\nvar formScheme = {\n  cliente: null,\n  itens: [],\n  total: 0,\n  formaPagamento: ''\n};\nexport var VendasForm = function VendasForm(_ref) {\n  _s();\n\n  var _formik$values$itens2;\n\n  var onSubmit = _ref.onSubmit,\n      onNovaVenda = _ref.onNovaVenda,\n      vendaRealizada = _ref.vendaRealizada;\n  var formasPagamento = [\"DINHEIRO\", \"CARTAO\"];\n  var clienteService = useClienteService();\n  var produtoService = useProdutoService();\n\n  var _useState = useState([]),\n      listaProdutos = _useState[0],\n      setListaProdutos = _useState[1];\n\n  var _useState2 = useState([]),\n      listaFiltradaProdutos = _useState2[0],\n      setListaFiltradaProdutos = _useState2[1];\n\n  var _useState3 = useState(''),\n      mensagem = _useState3[0],\n      setMensagem = _useState3[1];\n\n  var _useState4 = useState(''),\n      codigoProduto = _useState4[0],\n      setCodigoProduto = _useState4[1];\n\n  var _useState5 = useState(0),\n      quantidadeProduto = _useState5[0],\n      setQuantidadeProduto = _useState5[1];\n\n  var _useState6 = useState(null),\n      produto = _useState6[0],\n      setProduto = _useState6[1];\n\n  var _useState7 = useState({\n    content: [],\n    first: 0,\n    number: 0,\n    size: 0,\n    totalElements: 0\n  }),\n      listaClientes = _useState7[0],\n      setListaClientes = _useState7[1];\n\n  var formik = useFormik({\n    onSubmit: onSubmit,\n    initialValues: formScheme,\n    validationSchema: validationScheme\n  });\n\n  var handleClienteAutocomplete = function handleClienteAutocomplete(e) {\n    var nome = e.query;\n    clienteService.find(nome, '', 0, 20).then(function (clientes) {\n      return setListaClientes(clientes);\n    });\n  };\n\n  var handleClienteChange = function handleClienteChange(e) {\n    var clienteSelecionado = e.value;\n    formik.setFieldValue(\"cliente\", clienteSelecionado);\n  };\n\n  var handleCodigoProdutoSelect = function handleCodigoProdutoSelect(event) {\n    if (codigoProduto) {\n      produtoService.carregarProduto(codigoProduto).then(function (produtoEncontrado) {\n        return setProduto(produtoEncontrado);\n      })[\"catch\"](function (error) {\n        setMensagem(\"Produto nÃ£o encontrado!\");\n      });\n    }\n  };\n\n  var handleAddProduto = function handleAddProduto() {\n    var itensAdicionados = formik.values.itens;\n    var jaExisteOItemNaVenda = itensAdicionados.some(function (iv) {\n      return iv.produto.id === produto.id;\n    });\n\n    if (jaExisteOItemNaVenda) {\n      itensAdicionados.forEach(function (iv) {\n        if (iv.produto.id === produto.id) {\n          iv.quantidade = iv.quantidade + quantidadeProduto;\n        }\n      });\n    } else {\n      itensAdicionados.push({\n        produto: produto,\n        quantidade: quantidadeProduto\n      });\n    }\n\n    setProduto(null);\n    setCodigoProduto('');\n    setQuantidadeProduto(0);\n    var total = totalVenda();\n    formik.setFieldValue(\"total\", total);\n  };\n\n  var handleFecharDialogProdutoNaoEncontrado = function handleFecharDialogProdutoNaoEncontrado() {\n    setMensagem('');\n    setCodigoProduto('');\n    setProduto(null);\n  };\n\n  var handleProdutoAutocomplete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _produtosEncontrados, produtosEncontrados;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (listaProdutos.length) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return produtoService.listar();\n\n            case 3:\n              _produtosEncontrados = _context.sent;\n              setListaProdutos(_produtosEncontrados);\n\n            case 5:\n              produtosEncontrados = listaProdutos.filter(function (produto) {\n                return produto.nome.toUpperCase().includes(e.query.toUpperCase());\n              });\n              setListaFiltradaProdutos(produtosEncontrados);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleProdutoAutocomplete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var dialogMensagemFooter = function dialogMensagemFooter() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Ok\",\n        onClick: handleFecharDialogProdutoNaoEncontrado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var disableAddProdutoButton = function disableAddProdutoButton() {\n    return !produto || !quantidadeProduto;\n  };\n\n  var totalVenda = function totalVenda() {\n    var _formik$values$itens;\n\n    var totais = (_formik$values$itens = formik.values.itens) === null || _formik$values$itens === void 0 ? void 0 : _formik$values$itens.map(function (iv) {\n      return iv.quantidade * iv.produto.preco;\n    });\n\n    if (totais.length) {\n      return totais.reduce(function () {\n        var somatoriaAtual = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var valorItemAtual = arguments.length > 1 ? arguments[1] : undefined;\n        return somatoriaAtual + valorItemAtual;\n      });\n    } else {\n      return 0;\n    }\n  };\n\n  var realizarNovaVenda = function realizarNovaVenda() {\n    onNovaVenda();\n    formik.resetForm();\n    formik.setFieldValue(\"itens\", []);\n    formik.setFieldTouched(\"itens\", false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cliente\",\n          children: \"Cliente: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n          suggestions: listaClientes.content,\n          completeMethod: handleClienteAutocomplete,\n          value: formik.values.cliente,\n          field: \"nome\",\n          id: \"cliente\",\n          name: \"cliente\",\n          onChange: handleClienteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"p-error p-d-block\",\n          children: formik.touched && formik.errors.cliente\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-float-label\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"codigoProduto\",\n              onBlur: handleCodigoProdutoSelect,\n              value: codigoProduto,\n              onChange: function onChange(e) {\n                return setCodigoProduto(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"codigoProduto\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-6\",\n          children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n            suggestions: listaFiltradaProdutos,\n            id: \"produto\",\n            name: \"produto\",\n            completeMethod: handleProdutoAutocomplete,\n            value: produto,\n            field: \"nome\",\n            onChange: function onChange(e) {\n              return setProduto(e.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 24\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-float-label\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"qtdProduto\",\n              value: quantidadeProduto,\n              onChange: function onChange(e) {\n                return setQuantidadeProduto(parseInt(e.target.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"qtdProduto\",\n              children: \"QTD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            disabled: disableAddProdutoButton(),\n            label: \"Adicionar\",\n            onClick: handleAddProduto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12\",\n          children: [/*#__PURE__*/_jsxDEV(DataTable, {\n            value: formik.values.itens,\n            emptyMessage: \"Nenhum produto adicionado.\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              body: function body(item) {\n                var handleRemoverItem = function handleRemoverItem() {\n                  var novaLista = formik.values.itens.filter(function (iv) {\n                    return iv.produto.id !== item.produto.id;\n                  });\n                  formik.setFieldValue(\"itens\", novaLista);\n                };\n\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  label: \"Excluir\",\n                  onClick: handleRemoverItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.id\",\n              header: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.sku\",\n              header: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.nome\",\n              header: \"Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.preco\",\n              header: \"Pre\\xE7o Unit\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"quantidade\",\n              header: \"QTD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Column, {\n              header: \"Total\",\n              body: function body(iv) {\n                var total = iv.produto.preco * iv.quantidade;\n                var totalFormatado = formatadorMoney.format(total);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: totalFormatado\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"p-error p-d-block\",\n            children: formik.touched && formik.errors.itens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"formaPagamento\",\n              children: \"Forma de Pagamento: *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              id: \"formaPagamento\",\n              options: formasPagamento,\n              value: formik.values.formaPagamento,\n              onChange: function onChange(e) {\n                return formik.setFieldValue(\"formaPagamento\", e.value);\n              },\n              placeholder: \"Selecione...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error p-d-block\",\n              children: formik.touched && formik.errors.formaPagamento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itens\",\n              children: \"Itens:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputText, {\n              disabled: true,\n              value: (_formik$values$itens2 = formik.values.itens) === null || _formik$values$itens2 === void 0 ? void 0 : _formik$values$itens2.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"total\",\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputText, {\n              disabled: true,\n              value: formatadorMoney.format(formik.values.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, _this), !vendaRealizada && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, _this), vendaRealizada && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: realizarNovaVenda,\n        label: \"Nova Venda\",\n        className: \"p-button-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: \"Aten\\xE7\\xE3o!\",\n      position: \"top\",\n      visible: !!mensagem,\n      onHide: handleFecharDialogProdutoNaoEncontrado,\n      footer: dialogMensagemFooter,\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(VendasForm, \"x4xZqv08q9Z2hvHC14l48FbDGxY=\", false, function () {\n  return [useClienteService, useProdutoService, useFormik];\n});\n\n_c = VendasForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendasForm\");","map":{"version":3,"sources":["C:/TAC-projetoFinal/vendas-app/src/components/vendas/form.tsx"],"names":["useFormik","AutoComplete","useState","useClienteService","useProdutoService","Button","InputText","Dialog","DataTable","Column","Dropdown","validationScheme","formatadorMoney","Intl","NumberFormat","style","currency","formScheme","cliente","itens","total","formaPagamento","VendasForm","onSubmit","onNovaVenda","vendaRealizada","formasPagamento","clienteService","produtoService","listaProdutos","setListaProdutos","listaFiltradaProdutos","setListaFiltradaProdutos","mensagem","setMensagem","codigoProduto","setCodigoProduto","quantidadeProduto","setQuantidadeProduto","produto","setProduto","content","first","number","size","totalElements","listaClientes","setListaClientes","formik","initialValues","validationSchema","handleClienteAutocomplete","e","nome","query","find","then","clientes","handleClienteChange","clienteSelecionado","value","setFieldValue","handleCodigoProdutoSelect","event","carregarProduto","produtoEncontrado","error","handleAddProduto","itensAdicionados","values","jaExisteOItemNaVenda","some","iv","id","forEach","quantidade","push","totalVenda","handleFecharDialogProdutoNaoEncontrado","handleProdutoAutocomplete","length","listar","produtosEncontrados","filter","toUpperCase","includes","dialogMensagemFooter","disableAddProdutoButton","totais","map","preco","reduce","somatoriaAtual","valorItemAtual","realizarNovaVenda","resetForm","setFieldTouched","handleSubmit","touched","errors","target","parseInt","item","handleRemoverItem","novaLista","totalFormatado","format"],"mappings":"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","sourcesContent":["import { ItemVenda, Venda } from 'app/models/vendas'\nimport { useFormik } from 'formik'\nimport { \n    AutoComplete, \n    AutoCompleteChangeParams, \n    AutoCompleteCompleteMethodParams \n} from 'primereact/autocomplete'\nimport { useState } from 'react'\nimport { Page } from 'app/models/common/page'\n\nimport { Cliente } from 'app/models/clientes'\nimport { Produto } from 'app/models/produtos'\n\nimport { useClienteService, useProdutoService } from 'app/services'\nimport { Button } from 'primereact/button'\nimport { InputText } from 'primereact/inputtext'\nimport { Dialog } from 'primereact/dialog'\nimport { DataTable } from 'primereact/datatable'\nimport { Column } from 'primereact/column'\nimport { Dropdown } from 'primereact/dropdown'\nimport { validationScheme } from './validationScheme'\n\nconst formatadorMoney = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n })\n\ninterface VendasFormProps {\n    onSubmit: (venda: Venda) => void;\n    onNovaVenda: () => void;\n    vendaRealizada: boolean;\n}\n\nconst formScheme: Venda = {\n    cliente: null ,\n    itens: [],\n    total: 0,\n    formaPagamento: ''\n}\n\nexport const VendasForm: React.FC<VendasFormProps> = ({\n    onSubmit,\n    onNovaVenda,\n    vendaRealizada\n}) => {\n\n    const formasPagamento: String[] = [\"DINHEIRO\", \"CARTAO\"];\n    const clienteService = useClienteService();\n    const produtoService = useProdutoService();\n    const [ listaProdutos, setListaProdutos ] = useState<Produto[]>([])\n    const [ listaFiltradaProdutos, setListaFiltradaProdutos ] = useState<Produto[]>([])\n    const [ mensagem, setMensagem] = useState<string>('')\n    const [ codigoProduto, setCodigoProduto ] = useState<string>('');\n    const [ quantidadeProduto, setQuantidadeProduto ] = useState<number>(0);\n    const [ produto, setProduto ] = useState<Produto>(null);\n    const [ listaClientes, setListaClientes ] = useState<Page<Cliente>>({\n        content: [],\n        first: 0,\n        number: 0,\n        size: 0,\n        totalElements: 0\n    })\n\n    const formik = useFormik<Venda>({\n        onSubmit,\n        initialValues: formScheme,\n        validationSchema: validationScheme\n    })\n\n    const handleClienteAutocomplete = (e: AutoCompleteCompleteMethodParams) => {\n        const nome = e.query\n        clienteService\n            .find(nome, '', 0, 20)\n            .then(clientes => setListaClientes(clientes))\n    }\n\n    const handleClienteChange = (e: AutoCompleteChangeParams) => {\n        const clienteSelecionado: Cliente = e.value;\n        formik.setFieldValue(\"cliente\", clienteSelecionado)\n    }\n\n    const handleCodigoProdutoSelect = (event) => {\n        if(codigoProduto){\n            produtoService.carregarProduto(codigoProduto)\n                        .then(produtoEncontrado => setProduto(produtoEncontrado))\n                        .catch(error => {\n                            setMensagem(\"Produto nÃ£o encontrado!\")\n                        })\n        }\n    }\n\n    const handleAddProduto = () => {\n        const itensAdicionados = formik.values.itens\n\n        const jaExisteOItemNaVenda = itensAdicionados.some( (iv: ItemVenda) => {\n            return iv.produto.id === produto.id\n        })\n\n        if(jaExisteOItemNaVenda){\n            itensAdicionados.forEach( (iv: ItemVenda) => {\n                if(iv.produto.id === produto.id){\n                    iv.quantidade = iv.quantidade + quantidadeProduto\n                }\n            })\n        }else{\n            itensAdicionados.push({\n                produto: produto,\n                quantidade: quantidadeProduto\n            })    \n        }\n        \n        setProduto(null)\n        setCodigoProduto('')\n        setQuantidadeProduto(0) \n\n        const total = totalVenda()\n        formik.setFieldValue(\"total\", total)\n    }\n\n    const handleFecharDialogProdutoNaoEncontrado = () => {\n        setMensagem('')\n        setCodigoProduto('')\n        setProduto(null)\n    }\n\n    const handleProdutoAutocomplete = async (e: AutoCompleteCompleteMethodParams) => {\n        if(!listaProdutos.length){\n             const produtosEncontrados = await produtoService.listar();\n             setListaProdutos(produtosEncontrados)\n        }\n\n        const produtosEncontrados = listaProdutos.filter( (produto: Produto) => {\n            return produto.nome.toUpperCase().includes(e.query.toUpperCase())\n        })\n\n        setListaFiltradaProdutos(produtosEncontrados)\n    }\n\n    const dialogMensagemFooter = () => {\n        return (\n            <div>\n                <Button label=\"Ok\" onClick={handleFecharDialogProdutoNaoEncontrado} />\n            </div>\n        )\n    }\n\n    const disableAddProdutoButton = () => {\n        return !produto || !quantidadeProduto\n    }\n\n    const totalVenda = () => {\n        const totais: number[] = formik.values.itens?.map(iv => iv.quantidade * iv.produto.preco);\n        if(totais.length){\n            return totais.reduce(\n                 (somatoriaAtual = 0, valorItemAtual) => somatoriaAtual + valorItemAtual \n            );\n        }else{\n            return 0;\n        }\n    }\n\n    const realizarNovaVenda = () => {\n        onNovaVenda();\n        formik.resetForm();\n        formik.setFieldValue(\"itens\", [])\n        formik.setFieldTouched(\"itens\", false)\n    }\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"p-fluid\">\n                <div className=\"p-field\">\n                    <label htmlFor=\"cliente\">Cliente: *</label>\n                    <AutoComplete \n                            suggestions={listaClientes.content}\n                            completeMethod={handleClienteAutocomplete}\n                            value={formik.values.cliente}\n                            field=\"nome\"\n                            id=\"cliente\" \n                            name=\"cliente\" \n                            onChange={handleClienteChange}\n                            />\n                    <small className=\"p-error p-d-block\">\n                        {formik.touched && formik.errors.cliente}\n                    </small>\n                </div>    \n\n                <div className=\"p-grid\">\n                    <div className=\"p-col-2\">\n                        <span className=\"p-float-label\">\n                            <InputText id=\"codigoProduto\" \n                                    onBlur={handleCodigoProdutoSelect}\n                                    value={codigoProduto}\n                                    onChange={e => setCodigoProduto(e.target.value)} />\n                            <label htmlFor=\"codigoProduto\">CÃ³digo</label>\n                        </span>\n                    </div>\n\n                    <div className=\"p-col-6\">\n                       <AutoComplete suggestions={listaFiltradaProdutos}\n                                     id=\"produto\"\n                                     name=\"produto\"\n                                     completeMethod={handleProdutoAutocomplete}\n                                     value={produto} \n                                     field=\"nome\" \n                                     onChange={e => setProduto(e.value)}\n                                     />\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <span className=\"p-float-label\">\n                            <InputText id=\"qtdProduto\" \n                                       value={quantidadeProduto}\n                                       onChange={e => setQuantidadeProduto(parseInt(e.target.value))}\n                                       />\n                            <label htmlFor=\"qtdProduto\">QTD</label>\n                        </span>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <Button type=\"button\" \n                                disabled={disableAddProdutoButton()}\n                                label=\"Adicionar\" \n                                onClick={handleAddProduto} />\n                    </div>\n\n                    <div className=\"p-col-12\">\n                        <DataTable value={formik.values.itens} emptyMessage=\"Nenhum produto adicionado.\">\n                            <Column body={ (item: ItemVenda) => {\n\n                                const handleRemoverItem = () => {\n                                    const novaLista = formik.values.itens.filter(\n                                        iv => iv.produto.id !== item.produto.id\n                                    )\n                                    formik.setFieldValue(\"itens\", novaLista)\n                                }\n\n                                return (\n                                    <Button type=\"button\" label=\"Excluir\" onClick={handleRemoverItem} />\n                                )\n                            }} />\n                            <Column field=\"produto.id\" header=\"CÃ³digo\" />\n                            <Column field=\"produto.sku\" header=\"SKU\" />\n                            <Column field=\"produto.nome\" header=\"Produto\" />\n                            <Column field=\"produto.preco\" header=\"PreÃ§o UnitÃ¡rio\" />\n                            <Column field=\"quantidade\" header=\"QTD\" />\n                            <Column header=\"Total\" body={ (iv: ItemVenda) => {\n                                const total = iv.produto.preco * iv.quantidade\n                                const totalFormatado = formatadorMoney.format(total)\n                                return (\n                                    <div>\n                                        { totalFormatado }\n                                    </div>\n                                )\n                            } } />\n                        </DataTable>\n                        <small className=\"p-error p-d-block\">\n                            { formik.touched && formik.errors.itens}\n                        </small>\n                    </div>\n\n                    <div className=\"p-col-5\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"formaPagamento\">Forma de Pagamento: *</label>\n                            <Dropdown id=\"formaPagamento\" \n                                      options={formasPagamento}\n                                      value={formik.values.formaPagamento}\n                                      onChange={e => formik.setFieldValue(\"formaPagamento\", e.value)}\n                                      placeholder=\"Selecione...\"\n                                      />\n                            <small className=\"p-error p-d-block\">\n                                { formik.touched && formik.errors.formaPagamento}\n                        </small>\n                        </div>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"itens\">Itens:</label>\n                            <InputText disabled value={formik.values.itens?.length} />\n                        </div>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"total\">Total:</label>\n                            <InputText disabled value={formatadorMoney.format(formik.values.total)} />\n                        </div>\n                    </div>\n\n\n                </div>  \n                {!vendaRealizada &&\n                    <Button type=\"submit\" label=\"Finalizar\" />\n                }\n                {vendaRealizada && \n                    <Button type=\"button\" onClick={realizarNovaVenda} label=\"Nova Venda\" className=\"p-button-success\" />\n                }\n            </div>\n            <Dialog header=\"AtenÃ§Ã£o!\" position=\"top\" \n                    visible={!!mensagem} \n                    onHide={handleFecharDialogProdutoNaoEncontrado}\n                    footer={dialogMensagemFooter}>\n                {mensagem}\n            </Dialog>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}