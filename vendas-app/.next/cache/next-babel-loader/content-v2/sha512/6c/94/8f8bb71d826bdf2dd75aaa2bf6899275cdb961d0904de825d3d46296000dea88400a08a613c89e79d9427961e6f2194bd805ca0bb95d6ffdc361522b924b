{"ast":null,"code":"import { httpClient } from 'app/http';\nconst resourceURL = '/api/vendas';\nexport const useVendaService = () => {\n  const realizarVenda = async venda => {\n    await httpClient.post(resourceURL, venda);\n  };\n\n  const gerarRelatorioVendas = async (idCliente = '', dataInicio = '', dataFim = '') => {\n    const url = `${resourceURL}/relatorio-vendas?id=${idCliente}&inicio=${dataInicio}&fim=${dataFim}`;\n    const response = await httpClient.get(url, {\n      responseType: 'blob'\n    });\n    const bytes = response.data;\n    return new Blob([bytes], {\n      type: 'application/pdf'\n    });\n  };\n\n  return {\n    realizarVenda,\n    gerarRelatorioVendas\n  };\n};","map":{"version":3,"sources":["C:/TAC-projetoFinal/vendas-app/src/app/services/vendas.service.ts"],"names":["httpClient","resourceURL","useVendaService","realizarVenda","venda","post","gerarRelatorioVendas","idCliente","dataInicio","dataFim","url","response","get","responseType","bytes","data","Blob","type"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AAIA,MAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAEjC,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAwC;AAC1D,UAAMJ,UAAU,CAACK,IAAX,CAAuBJ,WAAvB,EAAoCG,KAApC,CAAN;AACH,GAFD;;AAIA,QAAME,oBAAoB,GAAG,OACzBC,SAAiB,GAAG,EADK,EAEzBC,UAAkB,GAAG,EAFI,EAGzBC,OAAe,GAAG,EAHO,KAGgB;AACzC,UAAMC,GAAG,GAAI,GAAET,WAAY,wBAAuBM,SAAU,WAAUC,UAAW,QAAOC,OAAQ,EAAhG;AACA,UAAME,QAAuB,GAAG,MAAMX,UAAU,CAACY,GAAX,CAAeF,GAAf,EAAoB;AAAEG,MAAAA,YAAY,EAAE;AAAhB,KAApB,CAAtC;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAvB;AACA,WAAO,IAAIC,IAAJ,CAAS,CAACF,KAAD,CAAT,EAAkB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAlB,CAAP;AACH,GARD;;AAUA,SAAO;AACHd,IAAAA,aADG;AAEHG,IAAAA;AAFG,GAAP;AAIH,CApBM","sourcesContent":["import { httpClient } from 'app/http'\nimport { Venda } from 'app/models/vendas'\nimport { AxiosResponse } from 'axios'\n\nconst resourceURL = '/api/vendas'\n\nexport const useVendaService = () => {\n\n    const realizarVenda = async (venda: Venda) : Promise<void> => {\n        await httpClient.post<Venda>(resourceURL, venda);\n    }\n\n    const gerarRelatorioVendas = async (\n        idCliente: string = '', \n        dataInicio: string = '', \n        dataFim: string = '') : Promise<Blob> => {\n        const url = `${resourceURL}/relatorio-vendas?id=${idCliente}&inicio=${dataInicio}&fim=${dataFim}`\n        const response: AxiosResponse = await httpClient.get(url, { responseType: 'blob' } )\n        const bytes = response.data       \n        return new Blob([bytes], { type: 'application/pdf' } )\n    }\n\n    return {\n        realizarVenda,\n        gerarRelatorioVendas\n    }\n}"]},"metadata":{},"sourceType":"module"}