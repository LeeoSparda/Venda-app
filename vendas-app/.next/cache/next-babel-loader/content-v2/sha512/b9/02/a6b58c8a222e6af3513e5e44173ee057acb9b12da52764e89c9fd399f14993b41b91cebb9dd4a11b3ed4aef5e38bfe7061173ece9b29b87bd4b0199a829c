{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/vendas-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\vendas-app\\\\src\\\\components\\\\clientes\\\\listagem\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Layout } from 'components';\nimport { Input, InputCPF } from 'components';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { confirmDialog } from 'primereact/confirmdialog';\nimport { useClienteService } from 'app/services';\nimport Router from 'next/router';\nexport var ListagemClientes = function ListagemClientes() {\n  _s();\n\n  var service = useClienteService();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState({\n    content: [],\n    first: 0,\n    number: 0,\n    size: 5,\n    totalElements: 0\n  }),\n      clientes = _useState2[0],\n      setClientes = _useState2[1];\n\n  var handleSubmit = function handleSubmit(filtro) {\n    handlePage(null);\n  };\n\n  var _useFormik = useFormik({\n    onSubmit: handleSubmit,\n    initialValues: {\n      nome: '',\n      cpf: ''\n    }\n  }),\n      formikSubmit = _useFormik.handleSubmit,\n      filtro = _useFormik.values,\n      handleChange = _useFormik.handleChange;\n\n  var handlePage = function handlePage(event) {\n    setLoading(true);\n    service.find(filtro.nome, filtro.cpf, event === null || event === void 0 ? void 0 : event.page, event === null || event === void 0 ? void 0 : event.rows).then(function (result) {\n      setClientes(_objectSpread(_objectSpread({}, result), {}, {\n        first: event === null || event === void 0 ? void 0 : event.first\n      }));\n    })[\"finally\"](function () {\n      return setLoading(false);\n    });\n  };\n\n  var deletar = function deletar(cliente) {\n    service.deletar(cliente.id).then(function (result) {\n      handlePage(null);\n    });\n  };\n\n  var actionTemplate = function actionTemplate(registro) {\n    var url = \"/cadastros/clientes?id=\".concat(registro.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: \"Editar\",\n        className: \"p-button-rounded p-button-info\",\n        onClick: function onClick(e) {\n          return Router.push(url);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Deletar\",\n        onClick: function onClick(event) {\n          confirmDialog({\n            message: \"Confirma a exclusão deste registro?\",\n            acceptLabel: \"Sim\",\n            rejectLabel: \"Não\",\n            accept: function accept() {\n              return deletar(registro);\n            },\n            header: \"Confirmação\"\n          });\n        },\n        className: \"p-button-rounded p-button-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    titulo: \"Clientes\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Nome\",\n          id: \"nome\",\n          columnClasses: \"is-half\",\n          autoComplete: \"off\",\n          onChange: handleChange,\n          name: \"nome\",\n          value: filtro.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(InputCPF, {\n          label: \"CPF\",\n          id: \"cpf\",\n          columnClasses: \"is-half\",\n          onChange: handleChange,\n          name: \"cpf\",\n          value: filtro.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-link\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Consultar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-link\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: function onClick(e) {\n              return Router.push(\"/cadastros/clientes\");\n            },\n            className: \"button is-warning\",\n            children: \"Novo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-full\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          value: clientes.content,\n          totalRecords: clientes.totalElements,\n          lazy: true,\n          paginator: true,\n          first: clientes.first,\n          rows: clientes.size,\n          onPage: handlePage,\n          loading: loading,\n          emptyMessage: \"Nenhum registro.\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"id\",\n            header: \"C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"nome\",\n            header: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"cpf\",\n            header: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"email\",\n            header: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            body: actionTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ListagemClientes, \"VyjWD4iMJKKE+KXPaH1i6H/G/wM=\", false, function () {\n  return [useClienteService, useFormik];\n});\n\n_c = ListagemClientes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListagemClientes\");","map":{"version":3,"sources":["C:/vendas-app/src/components/clientes/listagem/index.tsx"],"names":["Layout","Input","InputCPF","useFormik","useState","DataTable","Column","Button","confirmDialog","useClienteService","Router","ListagemClientes","service","loading","setLoading","content","first","number","size","totalElements","clientes","setClientes","handleSubmit","filtro","handlePage","onSubmit","initialValues","nome","cpf","formikSubmit","values","handleChange","event","find","page","rows","then","result","deletar","cliente","id","actionTemplate","registro","url","e","push","message","acceptLabel","rejectLabel","accept","header"],"mappings":"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","sourcesContent":["import { Cliente } from 'app/models/clientes'\nimport { Layout } from 'components'\nimport { Input, InputCPF } from 'components'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { DataTable, DataTablePageParams } from 'primereact/datatable'\nimport { Column } from 'primereact/column'\nimport { Button } from 'primereact/button'\nimport { confirmDialog } from 'primereact/confirmdialog'\nimport { Page } from 'app/models/common/page'\nimport { useClienteService } from 'app/services'\nimport Router from 'next/router'\n\ninterface ConsultaClientesForm {\n    nome?: string;\n    cpf?: string;\n}\n\nexport const ListagemClientes: React.FC = () => {\n\n    const service = useClienteService();\n    const [ loading, setLoading ] = useState<boolean>(false) \n    const [ clientes, setClientes]  = useState<Page<Cliente>>({\n        content: [],\n        first: 0,\n        number: 0,\n        size: 5,\n        totalElements: 0\n    });\n\n    const handleSubmit = (filtro: ConsultaClientesForm) => {\n        handlePage(null);\n    }\n\n    const { \n        handleSubmit: formikSubmit, \n        values: filtro,\n        handleChange \n    } = useFormik<ConsultaClientesForm>({\n        onSubmit: handleSubmit,\n        initialValues: { nome: '', cpf: '' }\n    })\n\n    const handlePage = (event: DataTablePageParams) => {\n        setLoading(true)\n        service.find(filtro.nome, filtro.cpf, event?.page, event?.rows)\n                .then(result => {\n                    setClientes({...result, first: event?.first })\n                }).finally(() => setLoading(false))\n    }\n\n    const deletar = (cliente: Cliente) => {\n        service.deletar(cliente.id).then(result => {\n            handlePage(null)\n        })\n    }\n\n    const actionTemplate = (registro: Cliente) => {\n        const url = `/cadastros/clientes?id=${registro.id}`\n        return (\n            <div>\n                <Button label=\"Editar\" \n                        className=\"p-button-rounded p-button-info\"\n                        onClick={e => Router.push(url) }\n                        />\n                <Button label=\"Deletar\" onClick={event => {\n                    confirmDialog({\n                        message: \"Confirma a exclusão deste registro?\",\n                        acceptLabel: \"Sim\",\n                        rejectLabel: \"Não\",\n                        accept: () => deletar(registro),\n                        header: \"Confirmação\"\n                    })\n                }}\n                        className=\"p-button-rounded p-button-danger\" />\n            </div>\n        )\n    }\n\n    return (\n        <Layout titulo=\"Clientes\">\n            <form onSubmit={formikSubmit}>\n                <div className=\"columns\">\n                    <Input label=\"Nome\" id=\"nome\" \n                           columnClasses=\"is-half\"\n                           autoComplete=\"off\"\n                           onChange={handleChange}\n                           name=\"nome\"\n                           value={filtro.nome} />\n\n                    <InputCPF label=\"CPF\" id=\"cpf\" \n                           columnClasses=\"is-half\"\n                           onChange={handleChange}\n                           name=\"cpf\" value={filtro.cpf} />\n                           \n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control is-link\">\n                        <button type=\"submit\" className=\"button is-success\">\n                            Consultar                     \n                        </button>\n                    </div>\n                    <div className=\"control is-link\">\n                        <button type=\"submit\" \n                                onClick={e => Router.push(\"/cadastros/clientes\")} \n                                className=\"button is-warning\">\n                            Novo                     \n                        </button>\n                    </div>\n                </div>  \n\n            </form>\n\n            <br />\n\n            <div className=\"columns\">\n                <div className=\"is-full\">\n                    <DataTable value={clientes.content} \n                               totalRecords={clientes.totalElements}\n                               lazy paginator\n                               first={clientes.first}\n                               rows={clientes.size}\n                               onPage={handlePage}\n                               loading={loading}\n                               emptyMessage=\"Nenhum registro.\"\n                               >\n                        <Column field=\"id\" header=\"Código\"  />\n                        <Column field=\"nome\" header=\"Nome\"  />\n                        <Column field=\"cpf\" header=\"CPF\"  />\n                        <Column field=\"email\" header=\"Email\" />\n                        <Column body={actionTemplate} />\n                    </DataTable>\n                </div>\n            </div>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}