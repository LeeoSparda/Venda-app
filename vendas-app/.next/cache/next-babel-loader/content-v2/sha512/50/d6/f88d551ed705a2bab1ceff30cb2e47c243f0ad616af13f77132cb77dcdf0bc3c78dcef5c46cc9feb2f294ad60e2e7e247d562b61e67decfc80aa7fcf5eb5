{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Nova pasta (6)\\\\venda-app-master\\\\vendas-app\\\\src\\\\components\\\\produtos\\\\listagem\\\\index.tsx\";\nimport { useEffect } from 'react';\nimport { Layout, Loader } from 'components';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { TabelaProdutos } from './tabela';\nimport useSWR from 'swr';\nimport { httpClient } from 'app/http';\nimport { useProdutoService } from 'app/services';\nimport { useState } from 'react';\nexport const ListagemProdutos = () => {\n  const service = useProdutoService();\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    data: result,\n    error\n  } = useSWR('/api/produtos', url => httpClient.get(url));\n  const {\n    0: lista,\n    1: setLista\n  } = useState([]);\n  useEffect(() => {\n    setLista((result === null || result === void 0 ? void 0 : result.data) || []);\n  }, [result]);\n\n  const editar = produto => {\n    const url = `/cadastros/produtos?id=${produto.id}`;\n    Router.push(url);\n  };\n\n  const deletar = produto => {\n    service.deletar(produto.id).then(response => {\n      setMessages([{\n        tipo: \"success\",\n        texto: \"Produto excluido com sucesso!\"\n      }]);\n      const listaAlterada = lista === null || lista === void 0 ? void 0 : lista.filter(p => p.id !== produto.id);\n      setLista(listaAlterada);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    titulo: \"Produtos\",\n    mensagens: messages,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/cadastros/produtos\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-warning\",\n        children: \"Novo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      show: !result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabelaProdutos, {\n      onEdit: editar,\n      onDelete: deletar,\n      produtos: lista\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/src/components/produtos/listagem/index.tsx"],"names":["useEffect","Layout","Loader","Link","Router","TabelaProdutos","useSWR","httpClient","useProdutoService","useState","ListagemProdutos","service","messages","setMessages","data","result","error","url","get","lista","setLista","editar","produto","id","push","deletar","then","response","tipo","texto","listaAlterada","filter","p"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAO,MAAMC,gBAA0B,GAAG,MAAM;AAE5C,QAAMC,OAAO,GAAGH,iBAAiB,EAAjC;AACA,QAAM;AAAA,OAAEI,QAAF;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAAe,EAAf,CAA1C;AACA,QAAM;AAAEK,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BV,MAAM,CACrB,eADqB,EACJW,GAAG,IAAIV,UAAU,CAACW,GAAX,CAAeD,GAAf,CADH,CAAtC;AAGA,QAAM;AAAA,OAAEE,KAAF;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAY,EAAZ,CAApC;AAEAT,EAAAA,SAAS,CAAE,MAAM;AACboB,IAAAA,QAAQ,CAAC,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAED,IAAR,KAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,CAACC,MAAD,CAFM,CAAT;;AAIA,QAAMM,MAAM,GAAIC,OAAD,IAAsB;AACjC,UAAML,GAAG,GAAI,0BAAyBK,OAAO,CAACC,EAAG,EAAjD;AACAnB,IAAAA,MAAM,CAACoB,IAAP,CAAYP,GAAZ;AACH,GAHD;;AAKA,QAAMQ,OAAO,GAAIH,OAAD,IAAsB;AAClCX,IAAAA,OAAO,CAACc,OAAR,CAAgBH,OAAO,CAACC,EAAxB,EAA4BG,IAA5B,CAAiCC,QAAQ,IAAI;AACzCd,MAAAA,WAAW,CAAC,CACR;AAAGe,QAAAA,IAAI,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OADQ,CAAD,CAAX;AAGA,YAAMC,aAAwB,GAAGX,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEY,MAAP,CAAeC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASD,OAAO,CAACC,EAArC,CAAjC;AACAH,MAAAA,QAAQ,CAACU,aAAD,CAAR;AACH,KAND;AAOH,GARD;;AAUA,sBACI,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAElB,QAArC;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,qBAAX;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAIU;AAAA;AAAA;AAAA;AAAA,YAJV,eAKI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEM,MAAxB;AAAgC,MAAA,QAAQ,EAAEI,OAA1C;AAAmD,MAAA,QAAQ,EAAEN;AAA7D;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtCM","sourcesContent":["import { useEffect } from 'react'\nimport { Layout, Loader } from 'components'\nimport Link from 'next/link'\nimport Router from 'next/router'\nimport { TabelaProdutos } from './tabela'\nimport { Produto } from 'app/models/produtos'\nimport useSWR from 'swr'\nimport { httpClient } from 'app/http'\nimport { AxiosResponse } from 'axios'\nimport { useProdutoService } from 'app/services'\nimport { useState } from 'react'\nimport { Alert } from 'components/common/message'\n\nexport const ListagemProdutos: React.FC = () => {\n\n    const service = useProdutoService();\n    const [ messages, setMessages ] = useState<Array<Alert>>([])\n    const { data: result, error } = useSWR<AxiosResponse<Produto[]>>\n                    ('/api/produtos', url => httpClient.get(url) )\n\n    const [ lista, setLista ] = useState<Produto[]>([])\n\n    useEffect( () => {\n        setLista(result?.data || [])\n    }, [result])\n\n    const editar = (produto: Produto) => {\n        const url = `/cadastros/produtos?id=${produto.id}`\n        Router.push(url)\n    } \n\n    const deletar = (produto: Produto) => {\n        service.deletar(produto.id).then(response => {\n            setMessages([\n                {  tipo: \"success\", texto: \"Produto excluido com sucesso!\" }\n            ])\n            const listaAlterada: Produto[] = lista?.filter( p => p.id !== produto.id )\n            setLista(listaAlterada)\n        })\n    }\n\n    return (\n        <Layout titulo=\"Produtos\" mensagens={messages}>\n            <Link href=\"/cadastros/produtos\">\n                <button className=\"button is-warning\">Novo</button>\n            </Link>\n            <br /><br />\n            <Loader show={!result} />\n            <TabelaProdutos onEdit={editar} onDelete={deletar} produtos={lista} />\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}