{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\TDS_projeto\\\\vendas-app\\\\src\\\\components\\\\vendas\\\\form.tsx\";\nimport { useFormik } from 'formik';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { useState } from 'react';\nimport { useClienteService, useProdutoService } from 'app/services';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Dialog } from 'primereact/dialog';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Dropdown } from 'primereact/dropdown';\nimport { validationScheme } from './validationScheme';\nconst formatadorMoney = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL'\n});\nconst formScheme = {\n  cliente: null,\n  itens: [],\n  total: 0,\n  formaPagamento: ''\n};\nexport const VendasForm = ({\n  onSubmit,\n  onNovaVenda,\n  vendaRealizada\n}) => {\n  var _formik$values$itens2;\n\n  const formasPagamento = [\"DINHEIRO\", \"CARTAO\"];\n  const clienteService = useClienteService();\n  const produtoService = useProdutoService();\n  const {\n    0: listaProdutos,\n    1: setListaProdutos\n  } = useState([]);\n  const {\n    0: listaFiltradaProdutos,\n    1: setListaFiltradaProdutos\n  } = useState([]);\n  const {\n    0: mensagem,\n    1: setMensagem\n  } = useState('');\n  const {\n    0: codigoProduto,\n    1: setCodigoProduto\n  } = useState('');\n  const {\n    0: quantidadeProduto,\n    1: setQuantidadeProduto\n  } = useState(0);\n  const {\n    0: produto,\n    1: setProduto\n  } = useState(null);\n  const {\n    0: listaClientes,\n    1: setListaClientes\n  } = useState({\n    content: [],\n    first: 0,\n    number: 0,\n    size: 0,\n    totalElements: 0\n  });\n  const formik = useFormik({\n    onSubmit,\n    initialValues: formScheme,\n    validationSchema: validationScheme\n  });\n\n  const handleClienteAutocomplete = e => {\n    const nome = e.query;\n    clienteService.find(nome, '', 0, 20).then(clientes => setListaClientes(clientes));\n  };\n\n  const handleClienteChange = e => {\n    const clienteSelecionado = e.value;\n    formik.setFieldValue(\"cliente\", clienteSelecionado);\n  };\n\n  const handleCodigoProdutoSelect = event => {\n    if (codigoProduto) {\n      produtoService.carregarProduto(codigoProduto).then(produtoEncontrado => setProduto(produtoEncontrado)).catch(error => {\n        setMensagem(\"Produto nÃ£o encontrado!\");\n      });\n    }\n  };\n\n  const handleAddProduto = () => {\n    const itensAdicionados = formik.values.itens;\n    const jaExisteOItemNaVenda = itensAdicionados.some(iv => {\n      return iv.produto.id === produto.id;\n    });\n\n    if (jaExisteOItemNaVenda) {\n      itensAdicionados.forEach(iv => {\n        if (iv.produto.id === produto.id) {\n          iv.quantidade = iv.quantidade + quantidadeProduto;\n        }\n      });\n    } else {\n      itensAdicionados.push({\n        produto: produto,\n        quantidade: quantidadeProduto\n      });\n    }\n\n    setProduto(null);\n    setCodigoProduto('');\n    setQuantidadeProduto(0);\n    const total = totalVenda();\n    formik.setFieldValue(\"total\", total);\n  };\n\n  const handleFecharDialogProdutoNaoEncontrado = () => {\n    setMensagem('');\n    setCodigoProduto('');\n    setProduto(null);\n  };\n\n  const handleProdutoAutocomplete = async e => {\n    if (!listaProdutos.length) {\n      const produtosEncontrados = await produtoService.listar();\n      setListaProdutos(produtosEncontrados);\n    }\n\n    const produtosEncontrados = listaProdutos.filter(produto => {\n      return produto.nome.toUpperCase().includes(e.query.toUpperCase());\n    });\n    setListaFiltradaProdutos(produtosEncontrados);\n  };\n\n  const dialogMensagemFooter = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Ok\",\n        onClick: handleFecharDialogProdutoNaoEncontrado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  };\n\n  const disableAddProdutoButton = () => {\n    return !produto || !quantidadeProduto;\n  };\n\n  const totalVenda = () => {\n    var _formik$values$itens;\n\n    const totais = (_formik$values$itens = formik.values.itens) === null || _formik$values$itens === void 0 ? void 0 : _formik$values$itens.map(iv => iv.quantidade * iv.produto.preco);\n\n    if (totais.length) {\n      return totais.reduce((somatoriaAtual = 0, valorItemAtual) => somatoriaAtual + valorItemAtual);\n    } else {\n      return 0;\n    }\n  };\n\n  const realizarNovaVenda = () => {\n    onNovaVenda();\n    formik.resetForm();\n    formik.setFieldValue(\"itens\", []);\n    formik.setFieldTouched(\"itens\", false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cliente\",\n          children: \"Cliente: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n          suggestions: listaClientes.content,\n          completeMethod: handleClienteAutocomplete,\n          value: formik.values.cliente,\n          field: \"nome\",\n          id: \"cliente\",\n          name: \"cliente\",\n          onChange: handleClienteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"p-error p-d-block\",\n          children: formik.touched && formik.errors.cliente\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-float-label\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"codigoProduto\",\n              onBlur: handleCodigoProdutoSelect,\n              value: codigoProduto,\n              onChange: e => setCodigoProduto(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"codigoProduto\",\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-6\",\n          children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n            suggestions: listaFiltradaProdutos,\n            id: \"produto\",\n            name: \"produto\",\n            completeMethod: handleProdutoAutocomplete,\n            value: produto,\n            field: \"nome\",\n            onChange: e => setProduto(e.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-float-label\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"qtdProduto\",\n              value: quantidadeProduto,\n              onChange: e => setQuantidadeProduto(parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"qtdProduto\",\n              children: \"QTD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            disabled: disableAddProdutoButton(),\n            label: \"Adicionar\",\n            onClick: handleAddProduto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-12\",\n          children: [/*#__PURE__*/_jsxDEV(DataTable, {\n            value: formik.values.itens,\n            emptyMessage: \"Nenhum produto adicionado.\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              body: item => {\n                const handleRemoverItem = () => {\n                  const novaLista = formik.values.itens.filter(iv => iv.produto.id !== item.produto.id);\n                  formik.setFieldValue(\"itens\", novaLista);\n                };\n\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  label: \"Excluir\",\n                  onClick: handleRemoverItem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.id\",\n              header: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.sku\",\n              header: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.nome\",\n              header: \"Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"produto.preco\",\n              header: \"Pre\\xE7o Unit\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"quantidade\",\n              header: \"QTD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              header: \"Total\",\n              body: iv => {\n                const total = iv.produto.preco * iv.quantidade;\n                const totalFormatado = formatadorMoney.format(total);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: totalFormatado\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"p-error p-d-block\",\n            children: formik.touched && formik.errors.itens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"formaPagamento\",\n              children: \"Forma de Pagamento: *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              id: \"formaPagamento\",\n              options: formasPagamento,\n              value: formik.values.formaPagamento,\n              onChange: e => formik.setFieldValue(\"formaPagamento\", e.value),\n              placeholder: \"Selecione...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"p-error p-d-block\",\n              children: formik.touched && formik.errors.formaPagamento\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itens\",\n              children: \"Itens:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              disabled: true,\n              value: (_formik$values$itens2 = formik.values.itens) === null || _formik$values$itens2 === void 0 ? void 0 : _formik$values$itens2.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"total\",\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              disabled: true,\n              value: formatadorMoney.format(formik.values.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), !vendaRealizada && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), vendaRealizada && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: realizarNovaVenda,\n        label: \"Nova Venda\",\n        className: \"p-button-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      header: \"Aten\\xE7\\xE3o!\",\n      position: \"top\",\n      visible: !!mensagem,\n      onHide: handleFecharDialogProdutoNaoEncontrado,\n      footer: dialogMensagemFooter,\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/TDS_projeto/vendas-app/src/components/vendas/form.tsx"],"names":["useFormik","AutoComplete","useState","useClienteService","useProdutoService","Button","InputText","Dialog","DataTable","Column","Dropdown","validationScheme","formatadorMoney","Intl","NumberFormat","style","currency","formScheme","cliente","itens","total","formaPagamento","VendasForm","onSubmit","onNovaVenda","vendaRealizada","formasPagamento","clienteService","produtoService","listaProdutos","setListaProdutos","listaFiltradaProdutos","setListaFiltradaProdutos","mensagem","setMensagem","codigoProduto","setCodigoProduto","quantidadeProduto","setQuantidadeProduto","produto","setProduto","listaClientes","setListaClientes","content","first","number","size","totalElements","formik","initialValues","validationSchema","handleClienteAutocomplete","e","nome","query","find","then","clientes","handleClienteChange","clienteSelecionado","value","setFieldValue","handleCodigoProdutoSelect","event","carregarProduto","produtoEncontrado","catch","error","handleAddProduto","itensAdicionados","values","jaExisteOItemNaVenda","some","iv","id","forEach","quantidade","push","totalVenda","handleFecharDialogProdutoNaoEncontrado","handleProdutoAutocomplete","length","produtosEncontrados","listar","filter","toUpperCase","includes","dialogMensagemFooter","disableAddProdutoButton","totais","map","preco","reduce","somatoriaAtual","valorItemAtual","realizarNovaVenda","resetForm","setFieldTouched","handleSubmit","touched","errors","target","parseInt","item","handleRemoverItem","novaLista","totalFormatado","format"],"mappings":"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","sourcesContent":["import { ItemVenda, Venda } from 'app/models/vendas'\nimport { useFormik } from 'formik'\nimport { \n    AutoComplete, \n    AutoCompleteChangeParams, \n    AutoCompleteCompleteMethodParams \n} from 'primereact/autocomplete'\nimport { useState } from 'react'\nimport { Page } from 'app/models/common/page'\n\nimport { Cliente } from 'app/models/clientes'\nimport { Produto } from 'app/models/produtos'\n\nimport { useClienteService, useProdutoService } from 'app/services'\nimport { Button } from 'primereact/button'\nimport { InputText } from 'primereact/inputtext'\nimport { Dialog } from 'primereact/dialog'\nimport { DataTable } from 'primereact/datatable'\nimport { Column } from 'primereact/column'\nimport { Dropdown } from 'primereact/dropdown'\nimport { validationScheme } from './validationScheme'\n\nconst formatadorMoney = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n })\n\ninterface VendasFormProps {\n    onSubmit: (venda: Venda) => void;\n    onNovaVenda: () => void;\n    vendaRealizada: boolean;\n}\n\nconst formScheme: Venda = {\n    cliente: null ,\n    itens: [],\n    total: 0,\n    formaPagamento: ''\n}\n\nexport const VendasForm: React.FC<VendasFormProps> = ({\n    onSubmit,\n    onNovaVenda,\n    vendaRealizada\n}) => {\n\n    const formasPagamento: String[] = [\"DINHEIRO\", \"CARTAO\"];\n    const clienteService = useClienteService();\n    const produtoService = useProdutoService();\n    const [ listaProdutos, setListaProdutos ] = useState<Produto[]>([])\n    const [ listaFiltradaProdutos, setListaFiltradaProdutos ] = useState<Produto[]>([])\n    const [ mensagem, setMensagem] = useState<string>('')\n    const [ codigoProduto, setCodigoProduto ] = useState<string>('');\n    const [ quantidadeProduto, setQuantidadeProduto ] = useState<number>(0);\n    const [ produto, setProduto ] = useState<Produto>(null);\n    const [ listaClientes, setListaClientes ] = useState<Page<Cliente>>({\n        content: [],\n        first: 0,\n        number: 0,\n        size: 0,\n        totalElements: 0\n    })\n\n    const formik = useFormik<Venda>({\n        onSubmit,\n        initialValues: formScheme,\n        validationSchema: validationScheme\n    })\n\n    const handleClienteAutocomplete = (e: AutoCompleteCompleteMethodParams) => {\n        const nome = e.query\n        clienteService\n            .find(nome, '', 0, 20)\n            .then(clientes => setListaClientes(clientes))\n    }\n\n    const handleClienteChange = (e: AutoCompleteChangeParams) => {\n        const clienteSelecionado: Cliente = e.value;\n        formik.setFieldValue(\"cliente\", clienteSelecionado)\n    }\n\n    const handleCodigoProdutoSelect = (event) => {\n        if(codigoProduto){\n            produtoService.carregarProduto(codigoProduto)\n                        .then(produtoEncontrado => setProduto(produtoEncontrado))\n                        .catch(error => {\n                            setMensagem(\"Produto nÃ£o encontrado!\")\n                        })\n        }\n    }\n\n    const handleAddProduto = () => {\n        const itensAdicionados = formik.values.itens\n\n        const jaExisteOItemNaVenda = itensAdicionados.some( (iv: ItemVenda) => {\n            return iv.produto.id === produto.id\n        })\n\n        if(jaExisteOItemNaVenda){\n            itensAdicionados.forEach( (iv: ItemVenda) => {\n                if(iv.produto.id === produto.id){\n                    iv.quantidade = iv.quantidade + quantidadeProduto\n                }\n            })\n        }else{\n            itensAdicionados.push({\n                produto: produto,\n                quantidade: quantidadeProduto\n            })    \n        }\n        \n        setProduto(null)\n        setCodigoProduto('')\n        setQuantidadeProduto(0) \n\n        const total = totalVenda()\n        formik.setFieldValue(\"total\", total)\n    }\n\n    const handleFecharDialogProdutoNaoEncontrado = () => {\n        setMensagem('')\n        setCodigoProduto('')\n        setProduto(null)\n    }\n\n    const handleProdutoAutocomplete = async (e: AutoCompleteCompleteMethodParams) => {\n        if(!listaProdutos.length){\n             const produtosEncontrados = await produtoService.listar();\n             setListaProdutos(produtosEncontrados)\n        }\n\n        const produtosEncontrados = listaProdutos.filter( (produto: Produto) => {\n            return produto.nome.toUpperCase().includes(e.query.toUpperCase())\n        })\n\n        setListaFiltradaProdutos(produtosEncontrados)\n    }\n\n    const dialogMensagemFooter = () => {\n        return (\n            <div>\n                <Button label=\"Ok\" onClick={handleFecharDialogProdutoNaoEncontrado} />\n            </div>\n        )\n    }\n\n    const disableAddProdutoButton = () => {\n        return !produto || !quantidadeProduto\n    }\n\n    const totalVenda = () => {\n        const totais: number[] = formik.values.itens?.map(iv => iv.quantidade * iv.produto.preco);\n        if(totais.length){\n            return totais.reduce(\n                 (somatoriaAtual = 0, valorItemAtual) => somatoriaAtual + valorItemAtual \n            );\n        }else{\n            return 0;\n        }\n    }\n\n    const realizarNovaVenda = () => {\n        onNovaVenda();\n        formik.resetForm();\n        formik.setFieldValue(\"itens\", [])\n        formik.setFieldTouched(\"itens\", false)\n    }\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"p-fluid\">\n                <div className=\"p-field\">\n                    <label htmlFor=\"cliente\">Cliente: *</label>\n                    <AutoComplete \n                            suggestions={listaClientes.content}\n                            completeMethod={handleClienteAutocomplete}\n                            value={formik.values.cliente}\n                            field=\"nome\"\n                            id=\"cliente\" \n                            name=\"cliente\" \n                            onChange={handleClienteChange}\n                            />\n                    <small className=\"p-error p-d-block\">\n                        {formik.touched && formik.errors.cliente}\n                    </small>\n                </div>    \n\n                <div className=\"p-grid\">\n                    <div className=\"p-col-2\">\n                        <span className=\"p-float-label\">\n                            <InputText id=\"codigoProduto\" \n                                    onBlur={handleCodigoProdutoSelect}\n                                    value={codigoProduto}\n                                    onChange={e => setCodigoProduto(e.target.value)} />\n                            <label htmlFor=\"codigoProduto\">CÃ³digo</label>\n                        </span>\n                    </div>\n\n                    <div className=\"p-col-6\">\n                       <AutoComplete suggestions={listaFiltradaProdutos}\n                                     id=\"produto\"\n                                     name=\"produto\"\n                                     completeMethod={handleProdutoAutocomplete}\n                                     value={produto} \n                                     field=\"nome\" \n                                     onChange={e => setProduto(e.value)}\n                                     />\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <span className=\"p-float-label\">\n                            <InputText id=\"qtdProduto\" \n                                       value={quantidadeProduto}\n                                       onChange={e => setQuantidadeProduto(parseInt(e.target.value))}\n                                       />\n                            <label htmlFor=\"qtdProduto\">QTD</label>\n                        </span>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <Button type=\"button\" \n                                disabled={disableAddProdutoButton()}\n                                label=\"Adicionar\" \n                                onClick={handleAddProduto} />\n                    </div>\n\n                    <div className=\"p-col-12\">\n                        <DataTable value={formik.values.itens} emptyMessage=\"Nenhum produto adicionado.\">\n                            <Column body={ (item: ItemVenda) => {\n\n                                const handleRemoverItem = () => {\n                                    const novaLista = formik.values.itens.filter(\n                                        iv => iv.produto.id !== item.produto.id\n                                    )\n                                    formik.setFieldValue(\"itens\", novaLista)\n                                }\n\n                                return (\n                                    <Button type=\"button\" label=\"Excluir\" onClick={handleRemoverItem} />\n                                )\n                            }} />\n                            <Column field=\"produto.id\" header=\"CÃ³digo\" />\n                            <Column field=\"produto.sku\" header=\"SKU\" />\n                            <Column field=\"produto.nome\" header=\"Produto\" />\n                            <Column field=\"produto.preco\" header=\"PreÃ§o UnitÃ¡rio\" />\n                            <Column field=\"quantidade\" header=\"QTD\" />\n                            <Column header=\"Total\" body={ (iv: ItemVenda) => {\n                                const total = iv.produto.preco * iv.quantidade\n                                const totalFormatado = formatadorMoney.format(total)\n                                return (\n                                    <div>\n                                        { totalFormatado }\n                                    </div>\n                                )\n                            } } />\n                        </DataTable>\n                        <small className=\"p-error p-d-block\">\n                            { formik.touched && formik.errors.itens}\n                        </small>\n                    </div>\n\n                    <div className=\"p-col-5\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"formaPagamento\">Forma de Pagamento: *</label>\n                            <Dropdown id=\"formaPagamento\" \n                                      options={formasPagamento}\n                                      value={formik.values.formaPagamento}\n                                      onChange={e => formik.setFieldValue(\"formaPagamento\", e.value)}\n                                      placeholder=\"Selecione...\"\n                                      />\n                            <small className=\"p-error p-d-block\">\n                                { formik.touched && formik.errors.formaPagamento}\n                        </small>\n                        </div>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"itens\">Itens:</label>\n                            <InputText disabled value={formik.values.itens?.length} />\n                        </div>\n                    </div>\n\n                    <div className=\"p-col-2\">\n                        <div className=\"p-field\">\n                            <label htmlFor=\"total\">Total:</label>\n                            <InputText disabled value={formatadorMoney.format(formik.values.total)} />\n                        </div>\n                    </div>\n\n\n                </div>  \n                {!vendaRealizada &&\n                    <Button type=\"submit\" label=\"Finalizar\" />\n                }\n                {vendaRealizada && \n                    <Button type=\"button\" onClick={realizarNovaVenda} label=\"Nova Venda\" className=\"p-button-success\" />\n                }\n            </div>\n            <Dialog header=\"AtenÃ§Ã£o!\" position=\"top\" \n                    visible={!!mensagem} \n                    onHide={handleFecharDialogProdutoNaoEncontrado}\n                    footer={dialogMensagemFooter}>\n                {mensagem}\n            </Dialog>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}