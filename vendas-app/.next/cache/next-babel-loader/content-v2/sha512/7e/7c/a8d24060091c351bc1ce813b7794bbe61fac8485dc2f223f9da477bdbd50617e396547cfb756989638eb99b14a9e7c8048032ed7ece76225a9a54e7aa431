{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\TAC_projeto\\\\vendas-app\\\\src\\\\components\\\\relatorios\\\\vendas\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Layout } from 'components';\nimport { useFormik } from 'formik';\nimport { Button } from 'primereact/button';\nimport { InputDate } from 'components';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport { useState } from 'react';\nimport { useClienteService, useVendaService } from 'app/services';\nexport var RelatorioVendas = function RelatorioVendas() {\n  _s();\n\n  var vendasService = useVendaService();\n  var clienteService = useClienteService();\n\n  var _useState = useState({\n    content: [],\n    first: 0,\n    number: 0,\n    size: 20,\n    totalElements: 0\n  }),\n      listaClientes = _useState[0],\n      setListaClientes = _useState[1];\n\n  var handleSubmit = function handleSubmit(formData) {\n    var _formData$cliente;\n\n    vendasService.gerarRelatorioVendas((_formData$cliente = formData.cliente) === null || _formData$cliente === void 0 ? void 0 : _formData$cliente.id, formData.dataInicio, formData.dataFim).then(function (blob) {\n      var fileURL = URL.createObjectURL(blob);\n      window.open(fileURL);\n    });\n  };\n\n  var formik = useFormik({\n    onSubmit: handleSubmit,\n    initialValues: {\n      cliente: null,\n      dataFim: '',\n      dataInicio: ''\n    }\n  });\n\n  var handleClienteAutoComplete = function handleClienteAutoComplete(e) {\n    var nome = e.query;\n    clienteService.find(nome, '', 0, 20).then(function (clientes) {\n      return setListaClientes(clientes);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    titulo: \"Relat\\xF3rio de Vendas\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12\",\n            children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n              suggestions: listaClientes.content,\n              completeMethod: handleClienteAutoComplete,\n              value: formik.values.cliente,\n              field: \"nome\",\n              id: \"cliente\",\n              name: \"cliente\",\n              onChange: function onChange(e) {\n                formik.setFieldValue(\"cliente\", e.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-6\",\n            children: /*#__PURE__*/_jsxDEV(InputDate, {\n              id: \"dataInicio\",\n              label: \"Data In\\xEDcio\",\n              name: \"dataInicio\",\n              value: formik.values.dataInicio,\n              onChange: formik.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-6\",\n            children: /*#__PURE__*/_jsxDEV(InputDate, {\n              id: \"dataFim\",\n              name: \"dataFim\",\n              label: \"Data Fim\",\n              value: formik.values.dataFim,\n              onChange: formik.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Gerar Relat\\xF3rio\",\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RelatorioVendas, \"eYwN6prASCy2YhXcy73vT72KgM0=\", false, function () {\n  return [useVendaService, useClienteService, useFormik];\n});\n\n_c = RelatorioVendas;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatorioVendas\");","map":{"version":3,"sources":["C:/TAC_projeto/vendas-app/src/components/relatorios/vendas/index.tsx"],"names":["Layout","useFormik","Button","InputDate","AutoComplete","useState","useClienteService","useVendaService","RelatorioVendas","vendasService","clienteService","content","first","number","size","totalElements","listaClientes","setListaClientes","handleSubmit","formData","gerarRelatorioVendas","cliente","id","dataInicio","dataFim","then","blob","fileURL","URL","createObjectURL","window","open","formik","onSubmit","initialValues","handleClienteAutoComplete","e","nome","query","find","clientes","values","setFieldValue","value","handleChange"],"mappings":"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","sourcesContent":["import { Layout } from 'components'\nimport { useFormik } from 'formik'\nimport { Page } from 'app/models/common/page'\nimport { Cliente } from 'app/models/clientes'\nimport { Button } from 'primereact/button'\nimport { InputDate } from 'components'\nimport { AutoComplete, AutoCompleteChangeParams, AutoCompleteCompleteMethodParams } from 'primereact/autocomplete'\nimport { useState } from 'react'\nimport { useClienteService, useVendaService } from 'app/services'\n\ninterface RelatorioVendasForm {\n    cliente: Cliente;\n    dataInicio: string;\n    dataFim: string;\n}\n\nexport const RelatorioVendas: React.FC = () => {\n\n    const vendasService = useVendaService()\n    const clienteService = useClienteService()\n    const [ listaClientes, setListaClientes ] = useState<Page<Cliente>>({\n        content: [], first: 0, number: 0, size: 20, totalElements: 0\n    })\n\n    const handleSubmit = (formData: RelatorioVendasForm) => {\n        vendasService.gerarRelatorioVendas(\n            formData.cliente?.id, \n            formData.dataInicio,\n            formData.dataFim\n        ).then(blob => {\n            const fileURL = URL.createObjectURL(blob);\n            window.open(fileURL)\n        })\n    }\n\n    const formik = useFormik<RelatorioVendasForm>({\n        onSubmit: handleSubmit,\n        initialValues: { cliente: null, dataFim: '', dataInicio: '' }\n    })\n\n    const handleClienteAutoComplete = (e: AutoCompleteCompleteMethodParams) => {\n        const nome = e.query\n        clienteService\n            .find(nome, '', 0, 20)\n            .then(clientes => setListaClientes(clientes))\n    }\n\n    return (\n        <Layout titulo=\"Relatório de Vendas\">\n            <form onSubmit={formik.handleSubmit}>\n                <div className=\"p-fluid\">\n                    <div className=\"p-grid\">\n                        <div className=\"p-col-12\">\n                            <AutoComplete suggestions={listaClientes.content}\n                                        completeMethod={handleClienteAutoComplete}\n                                        value={formik.values.cliente}\n                                        field=\"nome\"\n                                        id=\"cliente\"\n                                        name=\"cliente\"\n                                        onChange={(e: AutoCompleteChangeParams) => {\n                                            formik.setFieldValue(\"cliente\", e.value)\n                                        }}\n                            />\n                        </div>\n                        <div className=\"p-col-6\">\n                            <InputDate id=\"dataInicio\" \n                                    label=\"Data Início\"\n                                    name=\"dataInicio\" \n                                    value={formik.values.dataInicio}\n                                    onChange={formik.handleChange} />\n                        </div>\n                        <div className=\"p-col-6\">\n                            <InputDate id=\"dataFim\" \n                                    name=\"dataFim\" \n                                    label=\"Data Fim\"\n                                    value={formik.values.dataFim}\n                                    onChange={formik.handleChange} />\n                        </div>\n                        <div className=\"p-col\">\n                            <Button label=\"Gerar Relatório\" type=\"submit\" />\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}