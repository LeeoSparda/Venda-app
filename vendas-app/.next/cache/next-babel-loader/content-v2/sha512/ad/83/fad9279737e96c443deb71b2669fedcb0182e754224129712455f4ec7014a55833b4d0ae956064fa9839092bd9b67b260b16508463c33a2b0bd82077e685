{"ast":null,"code":"import { httpClient } from 'app/http';\nconst resourceURL = \"/api/clientes\";\nexport const useClienteService = () => {\n  const salvar = async cliente => {\n    const response = await httpClient.post(resourceURL, cliente);\n    return response.data;\n  };\n\n  const atualizar = async cliente => {\n    const url = `${resourceURL}/${cliente.id}`;\n    await httpClient.put(url, cliente);\n  };\n\n  const carregarCliente = async id => {\n    const url = `${resourceURL}/${id}`;\n    const response = await httpClient.get(url);\n    return response.data;\n  };\n\n  const deletar = async id => {\n    const url = `${resourceURL}/${id}`;\n    await httpClient.delete(url);\n  };\n\n  const find = async (nome = '', cpf = '', page = 0, size = 5) => {\n    const url = `${resourceURL}?nome=${nome}&cpf=${cpf}&page=${page}&size=${size}`;\n    const response = await httpClient.get(url);\n    return response.data;\n  };\n\n  return {\n    salvar,\n    atualizar,\n    carregarCliente,\n    deletar,\n    find\n  };\n};","map":{"version":3,"sources":["C:/Users/FelipePc/Desktop/TDS_projeto/vendas-app/src/app/services/cliente.service.ts"],"names":["httpClient","resourceURL","useClienteService","salvar","cliente","response","post","data","atualizar","url","id","put","carregarCliente","get","deletar","delete","find","nome","cpf","page","size"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AAKA,MAAMC,WAAmB,GAAG,eAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAEnC,QAAMC,MAAM,GAAG,MAAOC,OAAP,IAA+C;AAC1D,UAAMC,QAAgC,GAAG,MAAML,UAAU,CAACM,IAAX,CAAyBL,WAAzB,EAAsCG,OAAtC,CAA/C;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACH,GAHD;;AAKA,QAAMC,SAAS,GAAG,MAAOJ,OAAP,IAA4C;AAC1D,UAAMK,GAAW,GAAI,GAAER,WAAY,IAAGG,OAAO,CAACM,EAAG,EAAjD;AACA,UAAMV,UAAU,CAACW,GAAX,CAAwBF,GAAxB,EAA6BL,OAA7B,CAAN;AACH,GAHD;;AAKA,QAAMQ,eAAe,GAAG,MAAOF,EAAP,IAAiC;AACrD,UAAMD,GAAW,GAAI,GAAER,WAAY,IAAGS,EAAG,EAAzC;AACA,UAAML,QAAgC,GAAG,MAAML,UAAU,CAACa,GAAX,CAAeJ,GAAf,CAA/C;AACA,WAAOJ,QAAQ,CAACE,IAAhB;AACH,GAJD;;AAMA,QAAMO,OAAO,GAAG,MAAOJ,EAAP,IAA8B;AAC1C,UAAMD,GAAW,GAAI,GAAER,WAAY,IAAGS,EAAG,EAAzC;AACA,UAAMV,UAAU,CAACe,MAAX,CAAkBN,GAAlB,CAAN;AACH,GAHD;;AAKA,QAAMO,IAAI,GAAG,OACTC,IAAY,GAAG,EADN,EAETC,GAAW,GAAG,EAFL,EAGTC,IAAY,GAAG,CAHN,EAITC,IAAY,GAAG,CAJN,KAIsC;AAC/C,UAAMX,GAAG,GAAI,GAAER,WAAY,SAAQgB,IAAK,QAAOC,GAAI,SAAQC,IAAK,SAAQC,IAAK,EAA7E;AACA,UAAMf,QAAsC,GAAG,MAAML,UAAU,CAACa,GAAX,CAAeJ,GAAf,CAArD;AACA,WAAOJ,QAAQ,CAACE,IAAhB;AACH,GARD;;AAUA,SAAO;AACHJ,IAAAA,MADG;AAEHK,IAAAA,SAFG;AAGHI,IAAAA,eAHG;AAIHE,IAAAA,OAJG;AAKHE,IAAAA;AALG,GAAP;AAOH,CAxCM","sourcesContent":["import { httpClient } from 'app/http'\nimport { Cliente } from 'app/models/clientes'\nimport { AxiosResponse } from 'axios'\nimport { Page } from 'app/models/common/page'\n\nconst resourceURL: string = \"/api/clientes\"\n\nexport const useClienteService = () => {\n\n    const salvar = async (cliente: Cliente) : Promise<Cliente> => {\n        const response: AxiosResponse<Cliente> = await httpClient.post<Cliente>(resourceURL, cliente);\n        return response.data;\n    }\n\n    const atualizar = async (cliente: Cliente) : Promise<void> => {\n        const url: string = `${resourceURL}/${cliente.id}` \n        await httpClient.put<Cliente>(url, cliente)\n    }\n\n    const carregarCliente = async (id) : Promise<Cliente> => {\n        const url: string = `${resourceURL}/${id}`\n        const response: AxiosResponse<Cliente> = await httpClient.get(url);\n        return response.data;\n    }\n\n    const deletar = async (id) : Promise<void> => {\n        const url: string = `${resourceURL}/${id}`\n        await httpClient.delete(url)\n    }\n\n    const find = async (\n        nome: string = '', \n        cpf: string = '', \n        page: number = 0, \n        size: number = 5) : Promise<Page<Cliente>> =>  {\n        const url = `${resourceURL}?nome=${nome}&cpf=${cpf}&page=${page}&size=${size}`\n        const response: AxiosResponse<Page<Cliente>> = await httpClient.get(url);\n        return response.data;\n    }   \n\n    return {\n        salvar,\n        atualizar,\n        carregarCliente,\n        deletar,\n        find\n    }\n}"]},"metadata":{},"sourceType":"module"}