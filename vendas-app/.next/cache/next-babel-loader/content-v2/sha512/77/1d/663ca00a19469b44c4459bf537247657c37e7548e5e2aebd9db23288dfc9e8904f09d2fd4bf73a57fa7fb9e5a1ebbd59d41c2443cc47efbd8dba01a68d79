{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Desktop\\\\Nova pasta (6)\\\\venda-app-master\\\\vendas-app\\\\src\\\\components\\\\clientes\\\\cadastro\\\\form.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useFormik } from 'formik';\nimport { Input, InputCPF, InputTelefone, InputDate } from 'components';\nimport { validationScheme } from './validationSchema';\nimport Router from 'next/router';\nconst formScheme = {\n  cadastro: '',\n  cpf: '',\n  dataNascimento: '',\n  email: '',\n  endereco: '',\n  id: '',\n  nome: '',\n  telefone: ''\n};\nexport const ClienteForm = ({\n  cliente,\n  onSubmit\n}) => {\n  const formik = useFormik({\n    initialValues: _objectSpread(_objectSpread({}, formScheme), cliente),\n    onSubmit,\n    enableReinitialize: true,\n    validationSchema: validationScheme\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [formik.values.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"id\",\n        name: \"id\",\n        label: \"C\\xF3digo: \",\n        autoComplete: \"off\",\n        disabled: true,\n        columnClasses: \"is-half\",\n        value: formik.values.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"cadastro\",\n        name: \"cadastro\",\n        label: \"Data Cadastro: \",\n        autoComplete: \"off\",\n        disabled: true,\n        columnClasses: \"is-half\",\n        value: formik.values.cadastro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        id: \"nome\",\n        name: \"nome\",\n        label: \"Nome: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-full\",\n        onChange: formik.handleChange,\n        value: formik.values.nome,\n        error: formik.errors.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(InputCPF, {\n        id: \"cpf\",\n        name: \"cpf\",\n        label: \"CPF: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-half\",\n        onChange: formik.handleChange,\n        value: formik.values.cpf,\n        error: formik.errors.cpf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(InputDate, {\n        id: \"dataNascimento\",\n        name: \"dataNascimento\",\n        label: \"Data Nascimento: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-half\",\n        onChange: formik.handleChange,\n        value: formik.values.dataNascimento,\n        error: formik.errors.dataNascimento\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        id: \"endereco\",\n        name: \"endereco\",\n        label: \"Endere\\xE7o: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-full\",\n        onChange: formik.handleChange,\n        error: formik.errors.endereco,\n        value: formik.values.endereco\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        name: \"email\",\n        label: \"Email: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-half\",\n        onChange: formik.handleChange,\n        error: formik.errors.email,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(InputTelefone, {\n        id: \"telefone\",\n        name: \"telefone\",\n        label: \"Telefone: *\",\n        autoComplete: \"off\",\n        columnClasses: \"is-half\",\n        onChange: formik.handleChange,\n        error: formik.errors.telefone,\n        value: formik.values.telefone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control is-link\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button is-success\",\n          children: formik.values.id ? \"Atualizar\" : \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => Router.push(\"/consultas/clientes\"),\n          className: \"button\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/src/components/clientes/cadastro/form.tsx"],"names":["useFormik","Input","InputCPF","InputTelefone","InputDate","validationScheme","Router","formScheme","cadastro","cpf","dataNascimento","email","endereco","id","nome","telefone","ClienteForm","cliente","onSubmit","formik","initialValues","enableReinitialize","validationSchema","handleSubmit","values","handleChange","errors","e","push"],"mappings":"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","sourcesContent":["import { Cliente } from 'app/models/clientes'\nimport { useFormik } from 'formik'\nimport { Input, InputCPF, InputTelefone, InputDate } from 'components'\nimport { validationScheme } from './validationSchema'\nimport Router from 'next/router'\n\ninterface ClienteFormProps {\n    cliente: Cliente;\n    onSubmit: (cliente: Cliente) => void;\n}\n\nconst formScheme: Cliente = {\n    cadastro: '',\n    cpf: '',\n    dataNascimento: '',\n    email: '',\n    endereco: '',\n    id: '',\n    nome: '',\n    telefone: ''\n}\n\nexport const ClienteForm: React.FC<ClienteFormProps> = ({\n    cliente,\n    onSubmit\n}) => {\n\n    const formik = useFormik<Cliente>({\n        initialValues: {...formScheme, ...cliente},\n        onSubmit,\n        enableReinitialize: true,\n        validationSchema: validationScheme\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            {formik.values.id &&\n                <div className=\"columns\">\n                    <Input id=\"id\" \n                            name=\"id\"\n                            label=\"Código: \"\n                            autoComplete=\"off\" \n                            disabled\n                            columnClasses=\"is-half\"\n                            value={formik.values.id} />\n\n                    <Input id=\"cadastro\" \n                        name=\"cadastro\"\n                        label=\"Data Cadastro: \"\n                        autoComplete=\"off\" \n                        disabled\n                        columnClasses=\"is-half\"\n                        value={formik.values.cadastro} />\n            </div>   \n            }\n           <div className=\"columns\">\n               <Input id=\"nome\" \n                      name=\"nome\"\n                      label=\"Nome: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-full\"\n                      onChange={formik.handleChange} \n                      value={formik.values.nome} \n                      error={formik.errors.nome}\n                      />\n           </div>   \n           <div className=\"columns\">\n               <InputCPF id=\"cpf\" \n                      name=\"cpf\"\n                      label=\"CPF: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-half\"\n                      onChange={formik.handleChange} \n                      value={formik.values.cpf} \n                      error={formik.errors.cpf}\n                      />\n\n                <InputDate id=\"dataNascimento\" \n                      name=\"dataNascimento\"\n                      label=\"Data Nascimento: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-half\"\n                      onChange={formik.handleChange} \n                      value={formik.values.dataNascimento} \n                      error={formik.errors.dataNascimento}\n                      />\n           </div> \n           <div className=\"columns\">\n               <Input id=\"endereco\" \n                      name=\"endereco\"\n                      label=\"Endereço: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-full\"\n                      onChange={formik.handleChange} \n                      error={formik.errors.endereco}\n                      value={formik.values.endereco} />\n           </div>  \n           <div className=\"columns\">\n               <Input id=\"email\" \n                      name=\"email\"\n                      label=\"Email: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-half\"\n                      onChange={formik.handleChange} \n                      error={formik.errors.email}\n                      value={formik.values.email} />\n\n                <InputTelefone id=\"telefone\" \n                      name=\"telefone\"\n                      label=\"Telefone: *\"\n                      autoComplete=\"off\" \n                      columnClasses=\"is-half\"\n                      onChange={formik.handleChange} \n                      error={formik.errors.telefone}\n                      value={formik.values.telefone} />\n           </div>   \n           <div className=\"field is-grouped\">\n               <div className=\"control is-link\">\n                    <button type=\"submit\" className=\"button is-success\">\n                        { formik.values.id ? \"Atualizar\" : \"Salvar\" }                        \n                    </button>\n                </div>\n                <div className=\"control\">\n                    <button type=\"button\" \n                            onClick={e => Router.push(\"/consultas/clientes\")} \n                            className=\"button\">\n                        Voltar                        \n                    </button>\n                </div>\n            </div>          \n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}