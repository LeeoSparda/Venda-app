{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\TAC-projetoFinal\\\\vendas-app\\\\src\\\\components\\\\clientes\\\\listagem\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout } from 'components';\nimport { Input, InputCPF } from 'components';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { confirmDialog } from 'primereact/confirmdialog';\nimport { useClienteService } from 'app/services';\nimport Router from 'next/router';\nexport const ListagemClientes = () => {\n  const service = useClienteService();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: clientes,\n    1: setClientes\n  } = useState({\n    content: [],\n    first: 0,\n    number: 0,\n    size: 5,\n    totalElements: 0\n  });\n\n  const handleSubmit = filtro => {\n    handlePage(null);\n  };\n\n  const {\n    handleSubmit: formikSubmit,\n    values: filtro,\n    handleChange\n  } = useFormik({\n    onSubmit: handleSubmit,\n    initialValues: {\n      nome: '',\n      cpf: ''\n    }\n  });\n\n  const handlePage = event => {\n    setLoading(true);\n    service.find(filtro.nome, filtro.cpf, event === null || event === void 0 ? void 0 : event.page, event === null || event === void 0 ? void 0 : event.rows).then(result => {\n      setClientes(_objectSpread(_objectSpread({}, result), {}, {\n        first: event === null || event === void 0 ? void 0 : event.first\n      }));\n    }).finally(() => setLoading(false));\n  };\n\n  const deletar = cliente => {\n    service.deletar(cliente.id).then(result => {\n      handlePage(null);\n    });\n  };\n\n  const actionTemplate = registro => {\n    const url = `/cadastros/clientes?id=${registro.id}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: \"Editar\",\n        className: \"p-button-rounded p-button-info\",\n        onClick: e => Router.push(url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Deletar\",\n        onClick: event => {\n          confirmDialog({\n            message: \"Confirma a exclusão deste registro?\",\n            acceptLabel: \"Sim\",\n            rejectLabel: \"Não\",\n            accept: () => deletar(registro),\n            header: \"Confirmação\"\n          });\n        },\n        className: \"p-button-rounded p-button-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    titulo: \"Clientes\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formikSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: \"Nome\",\n          id: \"nome\",\n          columnClasses: \"is-half\",\n          autoComplete: \"off\",\n          onChange: handleChange,\n          name: \"nome\",\n          value: filtro.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputCPF, {\n          label: \"CPF\",\n          id: \"cpf\",\n          columnClasses: \"is-half\",\n          onChange: handleChange,\n          name: \"cpf\",\n          value: filtro.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field is-grouped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-link\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Consultar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-link\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => Router.push(\"/cadastros/clientes\"),\n            className: \"button is-warning\",\n            children: \"Novo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-full\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          value: clientes.content,\n          totalRecords: clientes.totalElements,\n          lazy: true,\n          paginator: true,\n          first: clientes.first,\n          rows: clientes.size,\n          onPage: handlePage,\n          loading: loading,\n          emptyMessage: \"Nenhum registro.\",\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"id\",\n            header: \"C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"nome\",\n            header: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"cpf\",\n            header: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"email\",\n            header: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            body: actionTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/TAC-projetoFinal/vendas-app/src/components/clientes/listagem/index.tsx"],"names":["Layout","Input","InputCPF","useFormik","useState","DataTable","Column","Button","confirmDialog","useClienteService","Router","ListagemClientes","service","loading","setLoading","clientes","setClientes","content","first","number","size","totalElements","handleSubmit","filtro","handlePage","formikSubmit","values","handleChange","onSubmit","initialValues","nome","cpf","event","find","page","rows","then","result","finally","deletar","cliente","id","actionTemplate","registro","url","e","push","message","acceptLabel","rejectLabel","accept","header"],"mappings":";;;;;;;;;AACA,SAASA,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,YAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA+C,sBAA/C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAOA,OAAO,MAAMC,gBAA0B,GAAG,MAAM;AAE5C,QAAMC,OAAO,GAAGH,iBAAiB,EAAjC;AACA,QAAM;AAAA,OAAEI,OAAF;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM;AAAA,OAAEW,QAAF;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAgB;AACtDa,IAAAA,OAAO,EAAE,EAD6C;AAEtDC,IAAAA,KAAK,EAAE,CAF+C;AAGtDC,IAAAA,MAAM,EAAE,CAH8C;AAItDC,IAAAA,IAAI,EAAE,CAJgD;AAKtDC,IAAAA,aAAa,EAAE;AALuC,GAAhB,CAA1C;;AAQA,QAAMC,YAAY,GAAIC,MAAD,IAAkC;AACnDC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAM;AACFF,IAAAA,YAAY,EAAEG,YADZ;AAEFC,IAAAA,MAAM,EAAEH,MAFN;AAGFI,IAAAA;AAHE,MAIFxB,SAAS,CAAuB;AAChCyB,IAAAA,QAAQ,EAAEN,YADsB;AAEhCO,IAAAA,aAAa,EAAE;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,GAAG,EAAE;AAAjB;AAFiB,GAAvB,CAJb;;AASA,QAAMP,UAAU,GAAIQ,KAAD,IAAgC;AAC/ClB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,OAAO,CAACqB,IAAR,CAAaV,MAAM,CAACO,IAApB,EAA0BP,MAAM,CAACQ,GAAjC,EAAsCC,KAAtC,aAAsCA,KAAtC,uBAAsCA,KAAK,CAAEE,IAA7C,EAAmDF,KAAnD,aAAmDA,KAAnD,uBAAmDA,KAAK,CAAEG,IAA1D,EACSC,IADT,CACcC,MAAM,IAAI;AACZrB,MAAAA,WAAW,iCAAKqB,MAAL;AAAanB,QAAAA,KAAK,EAAEc,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEd;AAA3B,SAAX;AACH,KAHT,EAGWoB,OAHX,CAGmB,MAAMxB,UAAU,CAAC,KAAD,CAHnC;AAIH,GAND;;AAQA,QAAMyB,OAAO,GAAIC,OAAD,IAAsB;AAClC5B,IAAAA,OAAO,CAAC2B,OAAR,CAAgBC,OAAO,CAACC,EAAxB,EAA4BL,IAA5B,CAAiCC,MAAM,IAAI;AACvCb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD;AAGH,GAJD;;AAMA,QAAMkB,cAAc,GAAIC,QAAD,IAAuB;AAC1C,UAAMC,GAAG,GAAI,0BAAyBD,QAAQ,CAACF,EAAG,EAAlD;AACA,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AACQ,QAAA,SAAS,EAAC,gCADlB;AAEQ,QAAA,OAAO,EAAEI,CAAC,IAAInC,MAAM,CAACoC,IAAP,CAAYF,GAAZ;AAFtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEZ,KAAK,IAAI;AACtCxB,UAAAA,aAAa,CAAC;AACVuC,YAAAA,OAAO,EAAE,qCADC;AAEVC,YAAAA,WAAW,EAAE,KAFH;AAGVC,YAAAA,WAAW,EAAE,KAHH;AAIVC,YAAAA,MAAM,EAAE,MAAMX,OAAO,CAACI,QAAD,CAJX;AAKVQ,YAAAA,MAAM,EAAE;AALE,WAAD,CAAb;AAOH,SARD;AASQ,QAAA,SAAS,EAAC;AATlB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GApBD;;AAsBA,sBACI,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,UAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAE1B,YAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,MAAb;AAAoB,UAAA,EAAE,EAAC,MAAvB;AACO,UAAA,aAAa,EAAC,SADrB;AAEO,UAAA,YAAY,EAAC,KAFpB;AAGO,UAAA,QAAQ,EAAEE,YAHjB;AAIO,UAAA,IAAI,EAAC,MAJZ;AAKO,UAAA,KAAK,EAAEJ,MAAM,CAACO;AALrB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,KAAhB;AAAsB,UAAA,EAAE,EAAC,KAAzB;AACO,UAAA,aAAa,EAAC,SADrB;AAEO,UAAA,QAAQ,EAAEH,YAFjB;AAGO,UAAA,IAAI,EAAC,KAHZ;AAGkB,UAAA,KAAK,EAAEJ,MAAM,CAACQ;AAHhC;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AACQ,YAAA,OAAO,EAAEc,CAAC,IAAInC,MAAM,CAACoC,IAAP,CAAY,qBAAZ,CADtB;AAEQ,YAAA,SAAS,EAAC,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkCI;AAAA;AAAA;AAAA;AAAA,YAlCJ,eAoCI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE/B,QAAQ,CAACE,OAA3B;AACW,UAAA,YAAY,EAAEF,QAAQ,CAACM,aADlC;AAEW,UAAA,IAAI,MAFf;AAEgB,UAAA,SAAS,MAFzB;AAGW,UAAA,KAAK,EAAEN,QAAQ,CAACG,KAH3B;AAIW,UAAA,IAAI,EAAEH,QAAQ,CAACK,IAJ1B;AAKW,UAAA,MAAM,EAAEI,UALnB;AAMW,UAAA,OAAO,EAAEX,OANpB;AAOW,UAAA,YAAY,EAAC,kBAPxB;AAAA,kCASI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAmB,YAAA,MAAM,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAWI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAoB,YAAA,MAAM,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAsB,YAAA,MAAM,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAaI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE6B;AAAd;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0DH,CAvHM","sourcesContent":["import { Cliente } from 'app/models/clientes'\nimport { Layout } from 'components'\nimport { Input, InputCPF } from 'components'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { DataTable, DataTablePageParams } from 'primereact/datatable'\nimport { Column } from 'primereact/column'\nimport { Button } from 'primereact/button'\nimport { confirmDialog } from 'primereact/confirmdialog'\nimport { Page } from 'app/models/common/page'\nimport { useClienteService } from 'app/services'\nimport Router from 'next/router'\n\ninterface ConsultaClientesForm {\n    nome?: string;\n    cpf?: string;\n}\n\nexport const ListagemClientes: React.FC = () => {\n\n    const service = useClienteService();\n    const [ loading, setLoading ] = useState<boolean>(false) \n    const [ clientes, setClientes]  = useState<Page<Cliente>>({\n        content: [],\n        first: 0,\n        number: 0,\n        size: 5,\n        totalElements: 0\n    });\n\n    const handleSubmit = (filtro: ConsultaClientesForm) => {\n        handlePage(null);\n    }\n\n    const { \n        handleSubmit: formikSubmit, \n        values: filtro,\n        handleChange \n    } = useFormik<ConsultaClientesForm>({\n        onSubmit: handleSubmit,\n        initialValues: { nome: '', cpf: '' }\n    })\n\n    const handlePage = (event: DataTablePageParams) => {\n        setLoading(true)\n        service.find(filtro.nome, filtro.cpf, event?.page, event?.rows)\n                .then(result => {\n                    setClientes({...result, first: event?.first })\n                }).finally(() => setLoading(false))\n    }\n\n    const deletar = (cliente: Cliente) => {\n        service.deletar(cliente.id).then(result => {\n            handlePage(null)\n        })\n    }\n\n    const actionTemplate = (registro: Cliente) => {\n        const url = `/cadastros/clientes?id=${registro.id}`\n        return (\n            <div>\n                <Button label=\"Editar\" \n                        className=\"p-button-rounded p-button-info\"\n                        onClick={e => Router.push(url) }\n                        />\n                <Button label=\"Deletar\" onClick={event => {\n                    confirmDialog({\n                        message: \"Confirma a exclusão deste registro?\",\n                        acceptLabel: \"Sim\",\n                        rejectLabel: \"Não\",\n                        accept: () => deletar(registro),\n                        header: \"Confirmação\"\n                    })\n                }}\n                        className=\"p-button-rounded p-button-danger\" />\n            </div>\n        )\n    }\n\n    return (\n        <Layout titulo=\"Clientes\">\n            <form onSubmit={formikSubmit}>\n                <div className=\"columns\">\n                    <Input label=\"Nome\" id=\"nome\" \n                           columnClasses=\"is-half\"\n                           autoComplete=\"off\"\n                           onChange={handleChange}\n                           name=\"nome\"\n                           value={filtro.nome} />\n\n                    <InputCPF label=\"CPF\" id=\"cpf\" \n                           columnClasses=\"is-half\"\n                           onChange={handleChange}\n                           name=\"cpf\" value={filtro.cpf} />\n                           \n                </div>\n\n                <div className=\"field is-grouped\">\n                    <div className=\"control is-link\">\n                        <button type=\"submit\" className=\"button is-success\">\n                            Consultar                     \n                        </button>\n                    </div>\n                    <div className=\"control is-link\">\n                        <button type=\"submit\" \n                                onClick={e => Router.push(\"/cadastros/clientes\")} \n                                className=\"button is-warning\">\n                            Novo                     \n                        </button>\n                    </div>\n                </div>  \n\n            </form>\n\n            <br />\n\n            <div className=\"columns\">\n                <div className=\"is-full\">\n                    <DataTable value={clientes.content} \n                               totalRecords={clientes.totalElements}\n                               lazy paginator\n                               first={clientes.first}\n                               rows={clientes.size}\n                               onPage={handlePage}\n                               loading={loading}\n                               emptyMessage=\"Nenhum registro.\"\n                               >\n                        <Column field=\"id\" header=\"Código\"  />\n                        <Column field=\"nome\" header=\"Nome\"  />\n                        <Column field=\"cpf\" header=\"CPF\"  />\n                        <Column field=\"email\" header=\"Email\" />\n                        <Column body={actionTemplate} />\n                    </DataTable>\n                </div>\n            </div>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}