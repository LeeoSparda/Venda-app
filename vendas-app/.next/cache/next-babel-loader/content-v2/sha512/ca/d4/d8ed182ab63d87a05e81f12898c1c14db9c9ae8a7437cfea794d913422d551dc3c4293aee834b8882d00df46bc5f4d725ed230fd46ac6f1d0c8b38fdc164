{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Desktop\\\\Nova pasta (6)\\\\venda-app-master\\\\vendas-app\\\\src\\\\components\\\\clientes\\\\cadastro\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Layout } from 'components';\nimport { useState } from 'react';\nimport { ClienteForm } from './form';\nimport { useClienteService } from 'app/services';\nimport { useRouter } from 'next/router';\nexport var CadastroCliente = function CadastroCliente() {\n  _s();\n\n  var _useState = useState({}),\n      cliente = _useState[0],\n      setCliente = _useState[1];\n\n  var _useState2 = useState([]),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var service = useClienteService();\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    if (id) {\n      service.carregarCliente(id).then(function (clienteEncontrado) {\n        return setCliente(clienteEncontrado);\n      });\n    }\n  }, [id]);\n\n  var handleSubmit = function handleSubmit(cliente) {\n    if (cliente.id) {\n      service.atualizar(cliente).then(function (response) {\n        setMessages([{\n          tipo: \"success\",\n          texto: \"Cliente atualizado com sucesso!\"\n        }]);\n      });\n    } else {\n      service.salvar(cliente).then(function (clienteSalvo) {\n        setCliente(clienteSalvo);\n        setMessages([{\n          tipo: \"success\",\n          texto: \"Cliente salvo com sucesso!\"\n        }]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    titulo: \"Clientes\",\n    mensagens: messages,\n    children: /*#__PURE__*/_jsxDEV(ClienteForm, {\n      cliente: cliente,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CadastroCliente, \"2IbryDIvXZ2cMCTdaIrRFo0TvZQ=\", false, function () {\n  return [useClienteService, useRouter];\n});\n\n_c = CadastroCliente;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroCliente\");","map":{"version":3,"sources":["D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/src/components/clientes/cadastro/index.tsx"],"names":["useEffect","Layout","useState","ClienteForm","useClienteService","useRouter","CadastroCliente","cliente","setCliente","messages","setMessages","service","router","id","query","carregarCliente","then","clienteEncontrado","handleSubmit","atualizar","response","tipo","texto","salvar","clienteSalvo"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAMC,eAAyB,GAAG,SAA5BA,eAA4B,GAAM;AAAA;;AAAA,kBAEbJ,QAAQ,CAAU,EAAV,CAFK;AAAA,MAEpCK,OAFoC;AAAA,MAE3BC,UAF2B;;AAAA,mBAGTN,QAAQ,CAAe,EAAf,CAHC;AAAA,MAGnCO,QAHmC;AAAA,MAGzBC,WAHyB;;AAI3C,MAAMC,OAAO,GAAGP,iBAAiB,EAAjC;AACA,MAAMQ,MAAM,GAAGP,SAAS,EAAxB;AAL2C,MAMnCQ,EANmC,GAM5BD,MAAM,CAACE,KANqB,CAMnCD,EANmC;AAQ3Cb,EAAAA,SAAS,CAAE,YAAM;AACb,QAAGa,EAAH,EAAM;AACFF,MAAAA,OAAO,CAACI,eAAR,CAAwBF,EAAxB,EACKG,IADL,CACU,UAAAC,iBAAiB;AAAA,eAAIT,UAAU,CAACS,iBAAD,CAAd;AAAA,OAD3B;AAEH;AACJ,GALQ,EAKN,CAACJ,EAAD,CALM,CAAT;;AAOA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACX,OAAD,EAAsB;AACvC,QAAGA,OAAO,CAACM,EAAX,EAAc;AACVF,MAAAA,OAAO,CAACQ,SAAR,CAAkBZ,OAAlB,EAA2BS,IAA3B,CAAgC,UAAAI,QAAQ,EAAI;AACxCV,QAAAA,WAAW,CAAC,CAAC;AACTW,UAAAA,IAAI,EAAE,SADG;AACQC,UAAAA,KAAK,EAAE;AADf,SAAD,CAAD,CAAX;AAGH,OAJD;AAKH,KAND,MAMQ;AACJX,MAAAA,OAAO,CAACY,MAAR,CAAehB,OAAf,EACSS,IADT,CACc,UAAAQ,YAAY,EAAI;AAClBhB,QAAAA,UAAU,CAACgB,YAAD,CAAV;AACAd,QAAAA,WAAW,CAAC,CAAC;AACTW,UAAAA,IAAI,EAAE,SADG;AACQC,UAAAA,KAAK,EAAE;AADf,SAAD,CAAD,CAAX;AAGH,OANT;AAOH;AACJ,GAhBD;;AAkBA,sBACI,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAEb,QAArC;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEF,OAAtB;AAA+B,MAAA,QAAQ,EAAEW;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAtCM;;GAAMZ,e;UAIOF,iB,EACDC,S;;;KALNC,e","sourcesContent":["import { useEffect } from 'react'\nimport { Layout } from 'components'\nimport { useState } from 'react'\nimport { ClienteForm } from './form'\nimport { Cliente } from 'app/models/clientes'\nimport { useClienteService } from 'app/services'\nimport { Alert } from 'components/common/message'\nimport { useRouter } from 'next/router'\n\nexport const CadastroCliente: React.FC = () => {\n\n    const [cliente, setCliente] = useState<Cliente>({});\n    const [ messages, setMessages ] = useState<Array<Alert>>([])\n    const service = useClienteService();\n    const router = useRouter();\n    const { id } = router.query;\n\n    useEffect( () => {\n        if(id){\n            service.carregarCliente(id)\n                .then(clienteEncontrado => setCliente(clienteEncontrado) )\n        }\n    }, [id] )\n\n    const handleSubmit = (cliente: Cliente) => {       \n        if(cliente.id){\n            service.atualizar(cliente).then(response => {\n                setMessages([{\n                    tipo: \"success\", texto: \"Cliente atualizado com sucesso!\"\n                }])      \n            })\n        }  else {\n            service.salvar(cliente)\n                    .then(clienteSalvo => {\n                        setCliente(clienteSalvo);\n                        setMessages([{\n                            tipo: \"success\", texto: \"Cliente salvo com sucesso!\"\n                        }])                \n                    })\n        } \n    }\n\n    return (\n        <Layout titulo=\"Clientes\" mensagens={messages}>\n            <ClienteForm cliente={cliente} onSubmit={handleSubmit} />\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}