{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/FelipePc/Desktop/TDS_projeto/vendas-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/FelipePc/Desktop/TDS_projeto/vendas-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { httpClient } from 'app/http';\nvar resourceURL = '/api/vendas';\nexport var useVendaService = function useVendaService() {\n  var realizarVenda = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(venda) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpClient.post(resourceURL, venda);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function realizarVenda(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var gerarRelatorioVendas = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var idCliente,\n          dataInicio,\n          dataFim,\n          url,\n          response,\n          bytes,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              idCliente = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : '';\n              dataInicio = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : '';\n              dataFim = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : '';\n              url = \"\".concat(resourceURL, \"/relatorio-vendas?id=\").concat(idCliente, \"&inicio=\").concat(dataInicio, \"&fim=\").concat(dataFim);\n              _context2.next = 6;\n              return httpClient.get(url, {\n                responseType: 'blob'\n              });\n\n            case 6:\n              response = _context2.sent;\n              bytes = response.data;\n              return _context2.abrupt(\"return\", new Blob([bytes], {\n                type: 'application/pdf'\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function gerarRelatorioVendas() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return {\n    realizarVenda: realizarVenda,\n    gerarRelatorioVendas: gerarRelatorioVendas\n  };\n};","map":{"version":3,"sources":["C:/Users/FelipePc/Desktop/TDS_projeto/vendas-app/src/app/services/vendas.service.ts"],"names":["httpClient","resourceURL","useVendaService","realizarVenda","venda","post","gerarRelatorioVendas","idCliente","dataInicio","dataFim","url","get","responseType","response","bytes","data","Blob","type"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,UAA3B;AAIA,IAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAEjC,MAAMC,aAAa;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACZJ,UAAU,CAACK,IAAX,CAAuBJ,WAAvB,EAAoCG,KAApC,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbD,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAIA,MAAMG,oBAAoB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,cAAAA,SADyB,8DACL,EADK;AAEzBC,cAAAA,UAFyB,8DAEJ,EAFI;AAGzBC,cAAAA,OAHyB,8DAGP,EAHO;AAInBC,cAAAA,GAJmB,aAIVT,WAJU,kCAIyBM,SAJzB,qBAI6CC,UAJ7C,kBAI+DC,OAJ/D;AAAA;AAAA,qBAKaT,UAAU,CAACW,GAAX,CAAeD,GAAf,EAAoB;AAAEE,gBAAAA,YAAY,EAAE;AAAhB,eAApB,CALb;;AAAA;AAKnBC,cAAAA,QALmB;AAMnBC,cAAAA,KANmB,GAMXD,QAAQ,CAACE,IANE;AAAA,gDAOlB,IAAIC,IAAJ,CAAS,CAACF,KAAD,CAAT,EAAkB;AAAEG,gBAAAA,IAAI,EAAE;AAAR,eAAlB,CAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBX,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAUA,SAAO;AACHH,IAAAA,aAAa,EAAbA,aADG;AAEHG,IAAAA,oBAAoB,EAApBA;AAFG,GAAP;AAIH,CApBM","sourcesContent":["import { httpClient } from 'app/http'\nimport { Venda } from 'app/models/vendas'\nimport { AxiosResponse } from 'axios'\n\nconst resourceURL = '/api/vendas'\n\nexport const useVendaService = () => {\n\n    const realizarVenda = async (venda: Venda) : Promise<void> => {\n        await httpClient.post<Venda>(resourceURL, venda);\n    }\n\n    const gerarRelatorioVendas = async (\n        idCliente: string = '', \n        dataInicio: string = '', \n        dataFim: string = '') : Promise<Blob> => {\n        const url = `${resourceURL}/relatorio-vendas?id=${idCliente}&inicio=${dataInicio}&fim=${dataFim}`\n        const response: AxiosResponse = await httpClient.get(url, { responseType: 'blob' } )\n        const bytes = response.data       \n        return new Blob([bytes], { type: 'application/pdf' } )\n    }\n\n    return {\n        realizarVenda,\n        gerarRelatorioVendas\n    }\n}"]},"metadata":{},"sourceType":"module"}