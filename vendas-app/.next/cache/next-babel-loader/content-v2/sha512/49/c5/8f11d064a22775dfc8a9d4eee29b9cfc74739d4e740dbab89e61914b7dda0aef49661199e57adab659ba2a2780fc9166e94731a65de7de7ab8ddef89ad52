{"ast":null,"code":"import _regeneratorRuntime from \"D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { httpClient } from 'app/http';\nvar resourceURL = \"/api/clientes\";\nexport var useClienteService = function useClienteService() {\n  var salvar = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cliente) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpClient.post(resourceURL, cliente);\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function salvar(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var atualizar = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cliente) {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = \"\".concat(resourceURL, \"/\").concat(cliente.id);\n              _context2.next = 3;\n              return httpClient.put(url, cliente);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function atualizar(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var carregarCliente = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var url, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = \"\".concat(resourceURL, \"/\").concat(id);\n              _context3.next = 3;\n              return httpClient.get(url);\n\n            case 3:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response.data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function carregarCliente(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deletar = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              url = \"\".concat(resourceURL, \"/\").concat(id);\n              _context4.next = 3;\n              return httpClient[\"delete\"](url);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function deletar(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var find = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var nome,\n          cpf,\n          page,\n          size,\n          url,\n          response,\n          _args5 = arguments;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              nome = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : '';\n              cpf = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : '';\n              page = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : 0;\n              size = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : 5;\n              url = \"\".concat(resourceURL, \"?nome=\").concat(nome, \"&cpf=\").concat(cpf, \"&page=\").concat(page, \"&size=\").concat(size);\n              _context5.next = 7;\n              return httpClient.get(url);\n\n            case 7:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response.data);\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function find() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return {\n    salvar: salvar,\n    atualizar: atualizar,\n    carregarCliente: carregarCliente,\n    deletar: deletar,\n    find: find\n  };\n};","map":{"version":3,"sources":["D:/Desktop/Nova pasta (6)/venda-app-master/vendas-app/src/app/services/cliente.service.ts"],"names":["httpClient","resourceURL","useClienteService","salvar","cliente","post","response","data","atualizar","url","id","put","carregarCliente","get","deletar","find","nome","cpf","page","size"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,UAA3B;AAKA,IAAMC,WAAmB,GAAG,eAA5B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAEnC,MAAMC,MAAM;AAAA,wEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoCJ,UAAU,CAACK,IAAX,CAAyBJ,WAAzB,EAAsCG,OAAtC,CADpC;;AAAA;AACLE,cAAAA,QADK;AAAA,+CAEJA,QAAQ,CAACC,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANJ,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAKA,MAAMK,SAAS;AAAA,yEAAG,kBAAOJ,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRK,cAAAA,GADQ,aACSR,WADT,cACwBG,OAAO,CAACM,EADhC;AAAA;AAAA,qBAERV,UAAU,CAACW,GAAX,CAAwBF,GAAxB,EAA6BL,OAA7B,CAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATI,SAAS;AAAA;AAAA;AAAA,KAAf;;AAKA,MAAMI,eAAe;AAAA,yEAAG,kBAAOF,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdD,cAAAA,GADc,aACGR,WADH,cACkBS,EADlB;AAAA;AAAA,qBAE2BV,UAAU,CAACa,GAAX,CAAeJ,GAAf,CAF3B;;AAAA;AAEdH,cAAAA,QAFc;AAAA,gDAGbA,QAAQ,CAACC,IAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfK,eAAe;AAAA;AAAA;AAAA,KAArB;;AAMA,MAAME,OAAO;AAAA,yEAAG,kBAAOJ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACND,cAAAA,GADM,aACWR,WADX,cAC0BS,EAD1B;AAAA;AAAA,qBAENV,UAAU,UAAV,CAAkBS,GAAlB,CAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPK,OAAO;AAAA;AAAA;AAAA,KAAb;;AAKA,MAAMC,IAAI;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,IADS,8DACM,EADN;AAETC,cAAAA,GAFS,8DAEK,EAFL;AAGTC,cAAAA,IAHS,8DAGM,CAHN;AAITC,cAAAA,IAJS,8DAIM,CAJN;AAKHV,cAAAA,GALG,aAKMR,WALN,mBAK0Be,IAL1B,kBAKsCC,GALtC,mBAKkDC,IALlD,mBAK+DC,IAL/D;AAAA;AAAA,qBAM4CnB,UAAU,CAACa,GAAX,CAAeJ,GAAf,CAN5C;;AAAA;AAMHH,cAAAA,QANG;AAAA,gDAOFA,QAAQ,CAACC,IAPP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJQ,IAAI;AAAA;AAAA;AAAA,KAAV;;AAUA,SAAO;AACHZ,IAAAA,MAAM,EAANA,MADG;AAEHK,IAAAA,SAAS,EAATA,SAFG;AAGHI,IAAAA,eAAe,EAAfA,eAHG;AAIHE,IAAAA,OAAO,EAAPA,OAJG;AAKHC,IAAAA,IAAI,EAAJA;AALG,GAAP;AAOH,CAxCM","sourcesContent":["import { httpClient } from 'app/http'\nimport { Cliente } from 'app/models/clientes'\nimport { AxiosResponse } from 'axios'\nimport { Page } from 'app/models/common/page'\n\nconst resourceURL: string = \"/api/clientes\"\n\nexport const useClienteService = () => {\n\n    const salvar = async (cliente: Cliente) : Promise<Cliente> => {\n        const response: AxiosResponse<Cliente> = await httpClient.post<Cliente>(resourceURL, cliente);\n        return response.data;\n    }\n\n    const atualizar = async (cliente: Cliente) : Promise<void> => {\n        const url: string = `${resourceURL}/${cliente.id}` \n        await httpClient.put<Cliente>(url, cliente)\n    }\n\n    const carregarCliente = async (id) : Promise<Cliente> => {\n        const url: string = `${resourceURL}/${id}`\n        const response: AxiosResponse<Cliente> = await httpClient.get(url);\n        return response.data;\n    }\n\n    const deletar = async (id) : Promise<void> => {\n        const url: string = `${resourceURL}/${id}`\n        await httpClient.delete(url)\n    }\n\n    const find = async (\n        nome: string = '', \n        cpf: string = '', \n        page: number = 0, \n        size: number = 5) : Promise<Page<Cliente>> =>  {\n        const url = `${resourceURL}?nome=${nome}&cpf=${cpf}&page=${page}&size=${size}`\n        const response: AxiosResponse<Page<Cliente>> = await httpClient.get(url);\n        return response.data;\n    }   \n\n    return {\n        salvar,\n        atualizar,\n        carregarCliente,\n        deletar,\n        find\n    }\n}"]},"metadata":{},"sourceType":"module"}